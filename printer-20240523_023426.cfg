[include mainsail.cfg]
[include ebb36.cfg]
[include temp.cfg]
[include steppers.cfg]
[include test_probe_accuracy.cfg]
#[include fan_monitor.cfg]
[include stealthburner_led_effects_barf.cfg]
#[include voron0-display.cfg]
#[include klicky-probe.cfg]
#[include display.cfg]
#[include menu.cfg]
[include testspeed.cfg]
#[include knomi.cfg]
[include timelapse.cfg]
#[include tmc_autotune.cfg]
[include bedfans.cfg]
#[include autoz.cfg]
#[include fan_monitor.cfg]
#[include sb2040.cfg]
[include Adaptive_Mesh.cfg]
#[include Adaptive_Purge.cfg]
#[include KAMP/KAMP_Settings.cfg]
#[include KAMP/Adaptive_Meshing.cfg]
#[include KAMP/Voron_Purge.cfg]
#[include KAMP/Line_Purge.cfg]
[include K-ShakeTune/*.cfg]
[include nevermore.cfg]

[mcu ebb36]
canbus_uuid: 71b5bbca6c55

[mcu]
serial:  /dev/serial/by-id/usb-Klipper_stm32f446xx_25004B000350534E4E313020-if00
#serial: /dev/ttyACM0
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_25004B000350534E4E313020-if00

[input_shaper]
shaper_freq_x: 122.2
shaper_type_x: 3hump_ei
damping_ratio_x: 0.088
shaper_freq_y: 41.4
shaper_type_y: mzv
damping_ratio_y: 0.063

[exclude_object]
[force_move]
enable_force_move: True

[printer]
kinematics: corexy
max_velocity: 450 #450  
max_accel: 4000           #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 450
square_corner_velocity: 5.0


#####################################################################
#   Probe
#####################################################################

[probe]
pin: !ebb36:PB9 #sb2040:gpio28 #^PB9
x_offset: 0
y_offset: 0
#z_offset: -0.840 # -0.840
speed: 25
samples: 3
sample_retract_dist: 3
lift_speed: 5.0
samples_result: average #median 
samples_tolerance: 0.0055
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[bed_mesh]
speed: 450
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310, 310
algorithm: lagrange #
probe_count: 5,5
move_check_distance: 3.0
#relative_reference_index: 12
fade_start: 0.6 #1
fade_end: 10
#fade_target:10
mesh_pps: 2,2

[homing_override]
axes: z
set_position_z: 0
gcode:
   BED_MESH_CLEAR
   G90
   G0 Z5 F600
   G28 X Y
   #G0 X235 Y342 F3600 
   G0 X175 Y175 Z30 F3600
   STATUS_homing
   G28 Z
   G0 Z10 F1800
   #G0 X175 Y175 Z30 F3600


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F18000.0                                                                                      ; move up 5mm
        G90                                                                                                 ; absolute positioning
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F18000.0                   ; park nozzle at front center
    {% endif %}
    OFF                                                                                                     ; turn everything off                                                                                     ; set logo back to white
timeout: 3600 # 1 hr


#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position: 232, 345
#speed:100
#z_hop:10

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420
##  Probe points
#points:
#   50,25
#   50,275
#   300,275
#   300,25

points:
   50,50
   50,300
   300,300
   300,50

speed: 450
horizontal_move_z: 5 #12
retries: 3
retry_tolerance: 0.0055
max_adjust: 10 #15

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

    
[pause_resume]

[display_status]
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    STATUS_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
[gcode_macro PID_BED]
gcode:
      PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro PID_NOZZLE]
gcode:
      M106 S64
      PID_CALIBRATE HEATER=extruder TARGET=260

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    G28
   # G0 X175 Y175 Z30 F3600
    STATUS_READY
    
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro PRINT_START]
gcode:
    STATUS_HOMING
    G28
    #BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M190 S{ params.BED }       ; Wait for bed to get to target temperature.
    M117 Preheating nozzle
    M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
    M107                       ; Print fan off
    M117 Heating nozzle
    M109 S{ params.EXTRUDER }  ; Wait for nozzle to get to target temperature.
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    STATUS_CLEANING
    clean_nozzle
        #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
    #BED_MESH_CLEAR
    #VORON_PURGE
  #  G28 Z
    STATUS_READY
    set_nozzle_leds_on
    SET_FAN_SPEED FAN=Nevermore SPEED=0.7
    BED_MESH_PROFILE LOAD="default"    
    G1 Z20 F3000                   ; move nozzle away from bed
    G1 X10 Y20 Z0.3 F5000.0 ; move to start-line position
    G1 X10 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
    G1 X11 Y200.0 Z0.3 F5000.0 ; move to side a little
    G1 X11 Y20 Z0.3 F1500.0 E30 ; draw 2nd line
    G1 E27 F3000 ; retract filament 3mm
    G92 E0 ; reset extruder
    G1 Z1.0 F3000 ; move z up little to prevent scratching of surface

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    M107                           ; turn off fan
    G1 Z50 F3000                    ; move nozzle up 50mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    STATUS_OFF
    
    
#[include klicky-probe.cfg]
[gcode_macro clean_nozzle]

variable_location_bucket_rear:      True
variable_enable_purge:              True
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      240	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:             2            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
variable_brush_top:            0
variable_clearance_z:           25	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        20000	         ; Nozzle wipe speed in mm/min.
variable_brush_start:        280
variable_brush_width:          70	
variable_brush_front:       0          
variable_brush_depth:       0          
variable_bucket_left_width:    92   
variable_bucket_right_width:   40            
variable_bucket_gap:           22	
variable_bucket_start:   0
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35
	
# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off
#[include calibration.cfg]

[exclude_object]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.897
#*# pid_ki = 2.529
#*# pid_kd = 56.456
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 49.822
#*# pid_ki = 1.574
#*# pid_kd = 394.219
#*#
#*# [bed_mesh default00]
#*# version = 1
#*# points =
#*# 	-0.002500, 0.045000, 0.000000, -0.030417, -0.015833
#*# 	0.013750, 0.015000, 0.000417, -0.019167, -0.007500
#*# 	0.002917, 0.011250, 0.000000, -0.026250, -0.026667
#*# 	-0.006667, 0.010417, 0.002917, -0.025417, 0.012917
#*# 	0.025833, -0.011250, -0.009583, 0.000417, -0.005833
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	0.084167, 0.088750, 0.078750, 0.055417, 0.062083, 0.077500, 0.080000
#*# 	0.040417, 0.055000, 0.048333, 0.060417, 0.046667, 0.063750, 0.070417
#*# 	0.050417, 0.037917, 0.040417, 0.035417, 0.040000, 0.028750, 0.034167
#*# 	0.028750, 0.024583, 0.013750, 0.000000, 0.007500, 0.023750, 0.039583
#*# 	0.013333, 0.008333, -0.007083, 0.007917, 0.000833, 0.007083, 0.021250
#*# 	0.013750, 0.030833, 0.056250, 0.012083, 0.030000, 0.015000, 0.043750
#*# 	0.023750, 0.008333, 0.015000, 0.005417, 0.016250, 0.031667, 0.019167
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default3]
#*# version = 1
#*# points =
#*# 	0.054583, 0.044583, 0.056667, 0.021667, 0.035000, 0.023750, 0.026250
#*# 	0.024167, 0.020000, 0.012083, -0.017500, -0.013333, -0.010000, 0.028333
#*# 	0.033333, 0.012917, 0.010000, -0.016250, -0.016667, 0.001250, 0.035417
#*# 	0.024583, 0.022083, 0.025833, 0.000000, -0.012500, 0.018333, 0.029167
#*# 	0.012083, 0.042500, 0.008333, -0.001667, -0.037083, -0.014167, 0.015417
#*# 	0.003750, 0.006667, 0.005000, 0.014167, -0.005417, 0.014167, 0.043333
#*# 	0.053333, 0.050000, 0.040833, 0.048333, 0.036667, 0.052500, 0.087500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 47.2
#*# shaper_type_y = zv
#*# shaper_freq_y = 36.4
#*#
#*# [probe]
#*# z_offset = -0.675
#*#
#*# [bed_mesh default4]
#*# version = 1
#*# points =
#*# 	0.153750, 0.122500, 0.126250, 0.118750, 0.070000, 0.106250, 0.127500
#*# 	0.066250, 0.072500, 0.048750, 0.053750, 0.068750, 0.091250, 0.141250
#*# 	0.067500, 0.048750, 0.042500, 0.060000, 0.030000, 0.053750, 0.136250
#*# 	0.016250, 0.001250, 0.040000, 0.000000, 0.011250, 0.056250, 0.098750
#*# 	0.002500, 0.005000, -0.007500, 0.015000, 0.000000, 0.020000, 0.075000
#*# 	0.043750, -0.035000, 0.016250, 0.022500, 0.001250, 0.030000, 0.083750
#*# 	0.081250, 0.036250, -0.015000, -0.003750, 0.007500, 0.022500, 0.071250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.015000, 0.019583, 0.010417, 0.003750, 0.083750
#*# 	0.034583, 0.010833, 0.000000, 0.037500, 0.077917
#*# 	0.044167, 0.000417, 0.030833, 0.030417, 0.118333
#*# x_count = 5
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 40.87
#*# max_x = 308.07
#*# min_y = 236.25
#*# max_y = 308.29
