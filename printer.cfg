[include mainsail.cfg]
#[include probe.cfg]
[include cartographer.cfg]
[include ebb36.cfg]
[include temp.cfg]
[include steppers.cfg]
[include test_probe_accuracy.cfg]
#[include fan_monitor.cfg]
#[include stealthburner_led_effects_barf.cfg]
#[include voron0-display.cfg]
#[include klicky-probe.cfg]
#[include display.cfg]
#[include menu.cfg]
[include testspeed.cfg]
#[include knomi.cfg]
[include timelapse.cfg]
[include tmc_autotune.cfg]
[include bedfans.cfg]
#[include fan_monitor.cfg]
#[include sb2040.cfg]
[include Adaptive_Mesh.cfg]
[include shaketune.cfg]
[include nevermore.cfg]
[include stealthburner_leds.cfg]

[mcu ebb36]
canbus_uuid: 71b5bbca6c55

[mcu]
#serial:  /dev/serial/by-id/usb-Klipper_stm32f446xx_25004B000350534E4E313020-if00
serial: /dev/ttyACM0



[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20
    
[input_shaper]
shaper_freq_x: 60.6
shaper_type_x: mzv
damping_ratio_x: 0.073
shaper_freq_y: 38.4
shaper_type_y: mzv
damping_ratio_y: 0.053

[exclude_object]

[force_move]
enable_force_move: True

[printer]
kinematics: corexy
max_velocity: 450 #450  
max_accel: 12000       #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 450
square_corner_velocity:5.0


#####################################################################
#   Probe
#####################################################################

#[probe]
#pin: !ebb36:PB9 #sb2040:gpio28 #^PB9
#x_offset: 0
#y_offset: 0
#z_offset: -0.840 # -0.840
#speed: 25
#samples: 3
#sample_retract_dist: 3
#lift_speed: 5.0
#samples_result: median
#samples_tolerance: 0.0055
#samples_tolerance_retries: 3
#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}
#
#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}

[bed_mesh]
speed: 450
horizontal_move_z: 3
mesh_min: 30, 30
mesh_max: 320, 320
algorithm: bicubic #lagrange #
probe_count: 61,61
mesh_pps: 1, 1
move_check_distance: 3.0
adaptive_margin: 5
zero_reference_position: 175, 175
bicubic_tension: 0.1
#relative_reference_index: 24
#fade_start: 0.6 #1
#fade_end: 10
#fade_target:10

[homing_override]
axes: z
set_position_z: 0
gcode:
   BED_MESH_CLEAR
   G90
   G0 Z5 F600
   G28 X Y
   #G0 X235 Y342 F3600 
   G0 X175 Y175 Z30 F3600
   STATUS_homing
   G28 Z
   G0 Z10 F1800
   #G0 X175 Y175 Z30 F3600


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F18000.0                                                                                      ; move up 5mm
        G90                                                                                                 ; absolute positioning
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F18000.0                   ; park nozzle at front center
    {% endif %}
    OFF                                                                                                     ; turn everything off                                                                                     ; set logo back to white
timeout: 3600 # 1 hr


#[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#home_xy_position: 232, 345
#speed:100
#z_hop:10

[quad_gantry_level]
gantry_corners:
   -60,-10
   410,420

points:
   50,25 #50,50
   50,275 #300
   300,275 #300
   300,25 #50

speed: 450
horizontal_move_z: 5 #12
retries: 5
retry_tolerance: 0.0025
max_adjust: 10 #15

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

    
[pause_resume]

[display_status]

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    STATUS_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
    
[gcode_macro PID_BED]
gcode:
      PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro PID_NOZZLE]
gcode:
      M106 S64
      PID_CALIBRATE HEATER=extruder TARGET=260

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    G28
   # G0 X175 Y175 Z30 F3600
    STATUS_READY
    
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro PRINT_START]
gcode:
    STATUS_HOMING
    G28
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M190 S{ params.BED }       ; Wait for bed to get to target temperature.
    M117 Preheating nozzle
    M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
    M107                       ; Print fan off
    STATUS_HEATING
    M117 Heating nozzle
    M109 S{ params.EXTRUDER }  ; Wait for nozzle to get to target temperature.
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    STATUS_CLEANING
    clean_nozzle
        #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
    #BED_MESH_CLEAR
    #VORON_PURGE
  #  G28 Z
    STATUS_READY
    set_nozzle_leds_on
    SET_FAN_SPEED FAN=Nevermore SPEED=0.7
    BED_MESH_PROFILE LOAD="default"    
    G1 Z20 F3000                   ; move nozzle away from bed
    G1 X10 Y20 Z0.3 F5000.0 ; move to start-line position
    G1 X10 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
    G1 X11 Y200.0 Z0.3 F5000.0 ; move to side a little
    G1 X11 Y20 Z0.3 F1500.0 E30 ; draw 2nd line
    G1 E27 F3000 ; retract filament 3mm
    G92 E0 ; reset extruder
    G1 Z1.0 F3000 ; move z up little to prevent scratching of surface

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    M107                           ; turn off fan
    G1 Z50 F3000                    ; move nozzle up 50mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    STATUS_OFF
    

[gcode_macro clean_nozzle]

variable_location_bucket_rear:      True
variable_enable_purge:              True
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:            10            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
variable_brush_top:             2
variable_clearance_z:           25	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        10000	         ; Nozzle wipe speed in mm/min.
variable_brush_start:        270
variable_brush_width:          70	
variable_brush_front:       0          
variable_brush_depth:       0          
variable_bucket_left_width:    92   
variable_bucket_right_width:   40            
variable_bucket_gap:           22	
variable_bucket_start:         0 #260
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35
	
# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off

[exclude_object]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
 number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.456
#*# pid_ki = 2.874
#*# pid_kd = 70.431
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.929
#*# pid_ki = 1.479
#*# pid_kd = 356.525
#*#
#*# [bed_mesh default00]
#*# version = 1
#*# points =
#*# 	-0.002500, 0.045000, 0.000000, -0.030417, -0.015833
#*# 	0.013750, 0.015000, 0.000417, -0.019167, -0.007500
#*# 	0.002917, 0.011250, 0.000000, -0.026250, -0.026667
#*# 	-0.006667, 0.010417, 0.002917, -0.025417, 0.012917
#*# 	0.025833, -0.011250, -0.009583, 0.000417, -0.005833
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	0.084167, 0.088750, 0.078750, 0.055417, 0.062083, 0.077500, 0.080000
#*# 	0.040417, 0.055000, 0.048333, 0.060417, 0.046667, 0.063750, 0.070417
#*# 	0.050417, 0.037917, 0.040417, 0.035417, 0.040000, 0.028750, 0.034167
#*# 	0.028750, 0.024583, 0.013750, 0.000000, 0.007500, 0.023750, 0.039583
#*# 	0.013333, 0.008333, -0.007083, 0.007917, 0.000833, 0.007083, 0.021250
#*# 	0.013750, 0.030833, 0.056250, 0.012083, 0.030000, 0.015000, 0.043750
#*# 	0.023750, 0.008333, 0.015000, 0.005417, 0.016250, 0.031667, 0.019167
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default3]
#*# version = 1
#*# points =
#*# 	0.054583, 0.044583, 0.056667, 0.021667, 0.035000, 0.023750, 0.026250
#*# 	0.024167, 0.020000, 0.012083, -0.017500, -0.013333, -0.010000, 0.028333
#*# 	0.033333, 0.012917, 0.010000, -0.016250, -0.016667, 0.001250, 0.035417
#*# 	0.024583, 0.022083, 0.025833, 0.000000, -0.012500, 0.018333, 0.029167
#*# 	0.012083, 0.042500, 0.008333, -0.001667, -0.037083, -0.014167, 0.015417
#*# 	0.003750, 0.006667, 0.005000, 0.014167, -0.005417, 0.014167, 0.043333
#*# 	0.053333, 0.050000, 0.040833, 0.048333, 0.036667, 0.052500, 0.087500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*#
#*# [probe]
#*# z_offset = -0.700
#*#
#*# [bed_mesh default4]
#*# version = 1
#*# points =
#*# 	0.153750, 0.122500, 0.126250, 0.118750, 0.070000, 0.106250, 0.127500
#*# 	0.066250, 0.072500, 0.048750, 0.053750, 0.068750, 0.091250, 0.141250
#*# 	0.067500, 0.048750, 0.042500, 0.060000, 0.030000, 0.053750, 0.136250
#*# 	0.016250, 0.001250, 0.040000, 0.000000, 0.011250, 0.056250, 0.098750
#*# 	0.002500, 0.005000, -0.007500, 0.015000, 0.000000, 0.020000, 0.075000
#*# 	0.043750, -0.035000, 0.016250, 0.022500, 0.001250, 0.030000, 0.083750
#*# 	0.081250, 0.036250, -0.015000, -0.003750, 0.007500, 0.022500, 0.071250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.667289, 0.668230, 0.671871, 0.671786, 0.675037, 0.679569, 0.680588, 0.678974, 0.678550, 0.680007, 0.680097, 0.681564, 0.682943, 0.685326, 0.683840, 0.688225, 0.691458, 0.693202, 0.689493, 0.687804, 0.687636, 0.686154, 0.685378, 0.682940, 0.681012, 0.678659, 0.676197, 0.676938, 0.675322, 0.671889, 0.670649, 0.664882, 0.665804, 0.661882, 0.663281, 0.662418, 0.659210, 0.660166, 0.662074, 0.665139, 0.660720, 0.660411, 0.660003, 0.659418, 0.660656, 0.662938, 0.664856, 0.662481, 0.665825, 0.674918, 0.674228, 0.679007, 0.673339, 0.674726
#*# 	  0.672610, 0.673957, 0.676248, 0.678979, 0.680039, 0.681062, 0.685631, 0.685168, 0.682359, 0.682366, 0.685166, 0.684205, 0.689382, 0.688738, 0.692437, 0.692855, 0.693756, 0.694579, 0.693967, 0.689502, 0.686942, 0.687576, 0.686467, 0.685440, 0.682151, 0.681321, 0.679981, 0.678873, 0.678634, 0.676461, 0.672692, 0.669872, 0.665366, 0.666149, 0.664792, 0.666037, 0.664330, 0.664510, 0.663325, 0.663587, 0.664764, 0.658358, 0.661356, 0.661685, 0.664727, 0.665881, 0.666400, 0.671300, 0.671938, 0.672006, 0.673677, 0.674530, 0.674669, 0.678468
#*# 	  0.672632, 0.678114, 0.679599, 0.682702, 0.684083, 0.686947, 0.686710, 0.688066, 0.688604, 0.688530, 0.689813, 0.691308, 0.690249, 0.693485, 0.694045, 0.697329, 0.698560, 0.698581, 0.696410, 0.695446, 0.696314, 0.695527, 0.693527, 0.689556, 0.687503, 0.685073, 0.683091, 0.682518, 0.679955, 0.677284, 0.675358, 0.674131, 0.674020, 0.669301, 0.669332, 0.671929, 0.670506, 0.669634, 0.667151, 0.667561, 0.664529, 0.665530, 0.663871, 0.667721, 0.667295, 0.668329, 0.671148, 0.672422, 0.675830, 0.677212, 0.676653, 0.677124, 0.679677, 0.680921
#*# 	  0.677847, 0.679295, 0.684237, 0.686613, 0.685711, 0.683402, 0.684976, 0.690200, 0.690863, 0.691750, 0.691302, 0.692172, 0.694671, 0.695721, 0.701662, 0.699603, 0.696359, 0.698208, 0.699300, 0.698844, 0.698522, 0.696197, 0.695424, 0.692480, 0.693226, 0.690984, 0.685958, 0.683039, 0.679637, 0.682213, 0.678281, 0.678249, 0.674480, 0.672353, 0.673267, 0.672347, 0.677951, 0.671613, 0.665651, 0.666977, 0.668671, 0.668686, 0.667636, 0.667340, 0.669738, 0.671621, 0.675051, 0.675878, 0.679191, 0.678033, 0.679826, 0.681651, 0.682687, 0.685727
#*# 	  0.674339, 0.675614, 0.681845, 0.686024, 0.683936, 0.685679, 0.687719, 0.690283, 0.689732, 0.691164, 0.691064, 0.691089, 0.692282, 0.696219, 0.695897, 0.700005, 0.700069, 0.701247, 0.702345, 0.697790, 0.697781, 0.695760, 0.694105, 0.693023, 0.691302, 0.688496, 0.687733, 0.684641, 0.685838, 0.682301, 0.679867, 0.679182, 0.676516, 0.671090, 0.674752, 0.675790, 0.676756, 0.673375, 0.671951, 0.668479, 0.670656, 0.669263, 0.667937, 0.667987, 0.668118, 0.668728, 0.674603, 0.678828, 0.679878, 0.680213, 0.682632, 0.683167, 0.684233, 0.686265
#*# 	  0.675478, 0.677195, 0.680304, 0.682823, 0.683732, 0.686129, 0.686440, 0.688735, 0.691363, 0.695190, 0.696941, 0.688656, 0.690882, 0.698818, 0.697046, 0.702810, 0.701460, 0.702500, 0.698162, 0.698655, 0.702843, 0.700077, 0.691504, 0.687682, 0.690274, 0.690971, 0.688929, 0.688796, 0.685668, 0.683945, 0.682988, 0.678377, 0.684385, 0.674178, 0.673941, 0.673778, 0.676902, 0.671375, 0.675123, 0.669054, 0.672160, 0.671313, 0.669514, 0.673197, 0.669650, 0.672642, 0.674654, 0.678734, 0.681160, 0.682723, 0.683336, 0.685093, 0.683892, 0.688940
#*# 	  0.678202, 0.677972, 0.680051, 0.683680, 0.681384, 0.685628, 0.691966, 0.692203, 0.690834, 0.695716, 0.691399, 0.697637, 0.694199, 0.700694, 0.697610, 0.703151, 0.697859, 0.704715, 0.705144, 0.700802, 0.702479, 0.699411, 0.699374, 0.696694, 0.693353, 0.692222, 0.687619, 0.685586, 0.685815, 0.686972, 0.681605, 0.679798, 0.677990, 0.677796, 0.677217, 0.676016, 0.678795, 0.673205, 0.673941, 0.673106, 0.676955, 0.670542, 0.671711, 0.669321, 0.672996, 0.670902, 0.677074, 0.675962, 0.680703, 0.677530, 0.684493, 0.688574, 0.687671, 0.688993
#*# 	  0.672036, 0.677657, 0.681390, 0.684040, 0.684372, 0.691271, 0.693860, 0.684095, 0.687003, 0.693746, 0.696133, 0.695900, 0.698230, 0.700546, 0.701702, 0.703879, 0.707993, 0.708691, 0.697003, 0.695661, 0.700762, 0.700301, 0.698598, 0.696890, 0.696081, 0.693804, 0.690975, 0.696766, 0.695476, 0.680699, 0.679349, 0.680047, 0.679904, 0.678420, 0.678123, 0.678057, 0.678101, 0.675253, 0.679915, 0.676309, 0.669504, 0.669303, 0.672173, 0.674313, 0.673559, 0.676096, 0.677881, 0.679041, 0.681989, 0.686495, 0.686202, 0.686839, 0.687666, 0.691199
#*# 	  0.675951, 0.683190, 0.680390, 0.686961, 0.685467, 0.690339, 0.689426, 0.693083, 0.690962, 0.694966, 0.697355, 0.700721, 0.697797, 0.701683, 0.700941, 0.703827, 0.705572, 0.706102, 0.704736, 0.698890, 0.700658, 0.704827, 0.703387, 0.699055, 0.696567, 0.695970, 0.691704, 0.692270, 0.687508, 0.687175, 0.678835, 0.679338, 0.681494, 0.680207, 0.676998, 0.676751, 0.678989, 0.675688, 0.675523, 0.673170, 0.673860, 0.672365, 0.670038, 0.674339, 0.675718, 0.675199, 0.676878, 0.678370, 0.682126, 0.681889, 0.684324, 0.685277, 0.688517, 0.690099
#*# 	  0.678627, 0.685047, 0.688332, 0.683380, 0.682475, 0.689136, 0.691550, 0.694305, 0.697540, 0.696675, 0.699583, 0.700482, 0.707255, 0.709880, 0.697425, 0.702860, 0.706680, 0.707509, 0.704112, 0.704164, 0.703002, 0.702873, 0.701957, 0.705484, 0.702221, 0.689943, 0.691461, 0.692642, 0.690214, 0.687049, 0.683564, 0.680561, 0.678401, 0.678544, 0.680979, 0.680870, 0.675115, 0.669938, 0.676371, 0.673799, 0.673246, 0.673308, 0.672255, 0.673732, 0.672968, 0.677706, 0.680415, 0.675674, 0.678801, 0.682566, 0.682267, 0.684772, 0.685645, 0.690610
#*# 	  0.678955, 0.678141, 0.681600, 0.693074, 0.693434, 0.692651, 0.693060, 0.696369, 0.697406, 0.697185, 0.699278, 0.698522, 0.698985, 0.700135, 0.708047, 0.709379, 0.706585, 0.707839, 0.704262, 0.705446, 0.703815, 0.702015, 0.704462, 0.699554, 0.695041, 0.698020, 0.698070, 0.693065, 0.688054, 0.686151, 0.682737, 0.680073, 0.677613, 0.677615, 0.670638, 0.676564, 0.680370, 0.680140, 0.676552, 0.673689, 0.675404, 0.672622, 0.673019, 0.672116, 0.673425, 0.670140, 0.670966, 0.681065, 0.683651, 0.682681, 0.682598, 0.683777, 0.685274, 0.684227
#*# 	  0.680194, 0.675049, 0.682129, 0.685748, 0.685809, 0.688622, 0.689572, 0.691980, 0.700529, 0.699876, 0.688145, 0.692937, 0.699386, 0.702147, 0.701622, 0.704193, 0.705217, 0.703975, 0.703826, 0.709495, 0.708850, 0.695442, 0.692685, 0.698296, 0.698172, 0.694456, 0.694618, 0.690595, 0.687216, 0.684266, 0.687086, 0.683581, 0.670772, 0.672857, 0.676771, 0.676752, 0.679377, 0.675795, 0.677120, 0.674881, 0.673626, 0.681057, 0.677500, 0.669117, 0.667545, 0.675633, 0.675217, 0.678098, 0.680360, 0.680221, 0.681244, 0.681133, 0.688892, 0.684754
#*# 	  0.678043, 0.678617, 0.680159, 0.682093, 0.682776, 0.683265, 0.683727, 0.689279, 0.689906, 0.688517, 0.691806, 0.692472, 0.696038, 0.695133, 0.699635, 0.698800, 0.697344, 0.697581, 0.702270, 0.702443, 0.698102, 0.697749, 0.698750, 0.695689, 0.694239, 0.691792, 0.691429, 0.686713, 0.685127, 0.684022, 0.680800, 0.679130, 0.676595, 0.675084, 0.675886, 0.676191, 0.677172, 0.678482, 0.674801, 0.672886, 0.676241, 0.676352, 0.672799, 0.671239, 0.674562, 0.672593, 0.676367, 0.676429, 0.678482, 0.678707, 0.676683, 0.681629, 0.684123, 0.683221
#*# 	  0.672563, 0.674868, 0.680886, 0.678121, 0.685032, 0.684688, 0.679356, 0.681022, 0.685286, 0.686243, 0.687606, 0.689014, 0.692467, 0.694603, 0.694332, 0.700943, 0.702224, 0.695277, 0.692058, 0.698310, 0.696935, 0.696817, 0.696075, 0.692811, 0.692943, 0.690180, 0.694944, 0.689486, 0.681751, 0.677431, 0.677978, 0.676478, 0.675697, 0.674302, 0.676709, 0.676292, 0.677220, 0.681189, 0.678401, 0.672328, 0.671642, 0.672199, 0.671271, 0.671348, 0.671775, 0.673797, 0.675269, 0.676486, 0.676542, 0.679876, 0.677250, 0.677447, 0.677922, 0.680677
#*# 	  0.673325, 0.675144, 0.677427, 0.678632, 0.678053, 0.677669, 0.681583, 0.679035, 0.686146, 0.681980, 0.681690, 0.690336, 0.693971, 0.694414, 0.695009, 0.694273, 0.696840, 0.695429, 0.695779, 0.694131, 0.690933, 0.692472, 0.695567, 0.692417, 0.691743, 0.688959, 0.685727, 0.685990, 0.681594, 0.680143, 0.675840, 0.675436, 0.669469, 0.675069, 0.674940, 0.678313, 0.676084, 0.676438, 0.675005, 0.673461, 0.672005, 0.669398, 0.668096, 0.666461, 0.669557, 0.674255, 0.671486, 0.674971, 0.674072, 0.675256, 0.675522, 0.676338, 0.672543, 0.675843
#*# 	  0.673127, 0.676283, 0.673707, 0.673942, 0.678174, 0.677552, 0.679995, 0.679994, 0.681513, 0.682369, 0.682816, 0.688799, 0.692539, 0.686960, 0.688047, 0.692858, 0.694224, 0.695021, 0.693860, 0.693135, 0.691850, 0.693573, 0.694794, 0.694802, 0.685185, 0.679630, 0.684211, 0.684167, 0.680861, 0.676438, 0.675849, 0.670844, 0.673078, 0.670614, 0.669678, 0.671419, 0.671827, 0.673756, 0.672718, 0.672274, 0.670267, 0.669336, 0.668138, 0.667775, 0.671008, 0.669720, 0.669107, 0.670282, 0.671043, 0.674754, 0.673787, 0.674532, 0.674529, 0.676629
#*# 	  0.672124, 0.672992, 0.671299, 0.674668, 0.674320, 0.676871, 0.676596, 0.676285, 0.680000, 0.677210, 0.680477, 0.683402, 0.684518, 0.685312, 0.687759, 0.694137, 0.694796, 0.692066, 0.693529, 0.690304, 0.691266, 0.689641, 0.689230, 0.687914, 0.682917, 0.682066, 0.681586, 0.681104, 0.679092, 0.676718, 0.672991, 0.673637, 0.670877, 0.671762, 0.669736, 0.672253, 0.672551, 0.674641, 0.673251, 0.670518, 0.670471, 0.668346, 0.667397, 0.666548, 0.667218, 0.667631, 0.667661, 0.668879, 0.672582, 0.673983, 0.673807, 0.673938, 0.674444, 0.676133
#*# 	  0.673911, 0.671832, 0.675050, 0.676621, 0.675194, 0.676627, 0.676351, 0.681468, 0.678310, 0.674195, 0.678583, 0.681860, 0.685231, 0.685480, 0.687793, 0.691524, 0.688881, 0.694498, 0.693084, 0.693568, 0.688203, 0.686336, 0.688195, 0.684884, 0.680958, 0.682679, 0.679831, 0.679016, 0.679147, 0.677225, 0.676309, 0.668274, 0.668527, 0.668249, 0.670932, 0.670910, 0.673966, 0.672883, 0.672112, 0.671291, 0.669184, 0.671298, 0.665734, 0.666810, 0.667791, 0.668459, 0.669149, 0.670369, 0.671480, 0.671914, 0.673683, 0.674670, 0.673412, 0.678418
#*# 	  0.672393, 0.674446, 0.677649, 0.677826, 0.677328, 0.678107, 0.681395, 0.679509, 0.679578, 0.680068, 0.681171, 0.683604, 0.686453, 0.688029, 0.688555, 0.691467, 0.692662, 0.693270, 0.694622, 0.691499, 0.690006, 0.691063, 0.688801, 0.684977, 0.684357, 0.679535, 0.681108, 0.679657, 0.677548, 0.675313, 0.674464, 0.671965, 0.668943, 0.671152, 0.670633, 0.672168, 0.674792, 0.672834, 0.674103, 0.672131, 0.671372, 0.670530, 0.669273, 0.670010, 0.669196, 0.670720, 0.670361, 0.671693, 0.673354, 0.672287, 0.675504, 0.675529, 0.678978, 0.682622
#*# 	  0.673265, 0.676614, 0.677873, 0.680839, 0.679537, 0.679121, 0.678946, 0.677013, 0.679130, 0.680998, 0.681531, 0.685473, 0.686777, 0.687499, 0.691403, 0.691559, 0.692950, 0.692863, 0.695112, 0.691964, 0.689414, 0.690220, 0.685874, 0.686191, 0.680082, 0.679364, 0.681424, 0.678374, 0.677586, 0.672849, 0.673044, 0.670026, 0.670074, 0.669532, 0.670122, 0.671956, 0.671977, 0.671598, 0.672341, 0.670111, 0.672312, 0.669771, 0.671004, 0.670196, 0.669155, 0.671745, 0.669846, 0.672127, 0.672625, 0.674126, 0.675878, 0.680090, 0.681478, 0.684508
#*# 	  0.674036, 0.675809, 0.677569, 0.678774, 0.677476, 0.677549, 0.677726, 0.678879, 0.679327, 0.680224, 0.681329, 0.684591, 0.687121, 0.687284, 0.688043, 0.691273, 0.691000, 0.692458, 0.691788, 0.690501, 0.687282, 0.688615, 0.684716, 0.680812, 0.681241, 0.678313, 0.678209, 0.678762, 0.674709, 0.674030, 0.671834, 0.669714, 0.671673, 0.668615, 0.672652, 0.671432, 0.671332, 0.672595, 0.669541, 0.671760, 0.669330, 0.669373, 0.670825, 0.668622, 0.670205, 0.670265, 0.669722, 0.673575, 0.672250, 0.675344, 0.678458, 0.681526, 0.683899, 0.689200
#*# 	  0.672213, 0.677555, 0.674837, 0.674084, 0.676893, 0.677392, 0.677663, 0.679007, 0.678464, 0.680770, 0.684159, 0.685793, 0.687351, 0.685175, 0.685867, 0.690213, 0.689032, 0.690419, 0.689078, 0.686643, 0.685635, 0.685499, 0.684676, 0.680378, 0.677260, 0.674782, 0.672853, 0.678209, 0.670843, 0.671548, 0.669145, 0.667405, 0.670292, 0.669285, 0.666993, 0.667496, 0.668205, 0.667730, 0.668596, 0.667486, 0.666629, 0.667677, 0.666804, 0.667582, 0.669184, 0.668438, 0.669287, 0.669528, 0.673011, 0.674104, 0.677691, 0.679762, 0.683621, 0.689462
#*# 	  0.670019, 0.671401, 0.674842, 0.675288, 0.675237, 0.674718, 0.677551, 0.678003, 0.677876, 0.680402, 0.681698, 0.682538, 0.687663, 0.687591, 0.684748, 0.689153, 0.690530, 0.690377, 0.685668, 0.685811, 0.681959, 0.681791, 0.680322, 0.678482, 0.673369, 0.673103, 0.673904, 0.674480, 0.672504, 0.669441, 0.667278, 0.666145, 0.665451, 0.663700, 0.663906, 0.664565, 0.662774, 0.666663, 0.664968, 0.666738, 0.663185, 0.663383, 0.663896, 0.663346, 0.665121, 0.664627, 0.661998, 0.665899, 0.669279, 0.674025, 0.675899, 0.678930, 0.680628, 0.683936
#*# 	  0.674462, 0.669565, 0.675879, 0.677836, 0.675690, 0.678498, 0.684737, 0.684888, 0.680779, 0.683515, 0.680177, 0.683382, 0.689195, 0.690032, 0.690425, 0.690327, 0.690844, 0.694296, 0.692772, 0.685131, 0.684093, 0.679114, 0.673661, 0.679292, 0.676278, 0.673112, 0.673100, 0.672933, 0.671106, 0.675449, 0.673170, 0.659685, 0.660616, 0.663774, 0.665235, 0.664702, 0.665888, 0.664894, 0.664029, 0.665166, 0.667345, 0.666317, 0.661727, 0.660390, 0.664656, 0.663332, 0.664349, 0.668263, 0.668179, 0.671432, 0.674808, 0.678295, 0.681203, 0.684605
#*# 	  0.663654, 0.673869, 0.675845, 0.674819, 0.675691, 0.675933, 0.672733, 0.675750, 0.680599, 0.686673, 0.691148, 0.686291, 0.688754, 0.688663, 0.688993, 0.690587, 0.686552, 0.683933, 0.680980, 0.683813, 0.684706, 0.685733, 0.678368, 0.677194, 0.672612, 0.674108, 0.670306, 0.671078, 0.666975, 0.663820, 0.667623, 0.665695, 0.664783, 0.661610, 0.661718, 0.662338, 0.662428, 0.661553, 0.661332, 0.658354, 0.656182, 0.659087, 0.662236, 0.663992, 0.660743, 0.662014, 0.662371, 0.664376, 0.666741, 0.668200, 0.667808, 0.672043, 0.682635, 0.680733
#*# 	  0.666729, 0.671005, 0.681393, 0.680752, 0.673466, 0.666849, 0.669993, 0.678258, 0.677620, 0.682870, 0.680996, 0.685627, 0.686970, 0.692564, 0.696291, 0.685174, 0.682418, 0.680299, 0.684689, 0.683015, 0.680714, 0.680404, 0.676600, 0.675577, 0.679578, 0.677670, 0.671039, 0.662706, 0.664396, 0.664929, 0.666546, 0.661897, 0.661736, 0.660928, 0.659601, 0.668116, 0.665284, 0.660535, 0.654360, 0.655143, 0.657631, 0.656870, 0.658073, 0.657708, 0.661666, 0.660742, 0.667006, 0.667421, 0.665699, 0.665241, 0.669591, 0.671451, 0.675860, 0.679552
#*# 	  0.665864, 0.666015, 0.675988, 0.674379, 0.671678, 0.670695, 0.672952, 0.673171, 0.676378, 0.678410, 0.675322, 0.677530, 0.683954, 0.687175, 0.688680, 0.683922, 0.684291, 0.684985, 0.681704, 0.681327, 0.678503, 0.673192, 0.674701, 0.673158, 0.673395, 0.671836, 0.669372, 0.669699, 0.667198, 0.666647, 0.664310, 0.661554, 0.658568, 0.654799, 0.658324, 0.662229, 0.660899, 0.656631, 0.657629, 0.656746, 0.654574, 0.654990, 0.653725, 0.656134, 0.653847, 0.659568, 0.661899, 0.665742, 0.663770, 0.666744, 0.669411, 0.670253, 0.669137, 0.676053
#*# 	  0.667785, 0.669277, 0.667961, 0.667941, 0.671068, 0.671804, 0.671079, 0.674236, 0.675865, 0.681642, 0.683837, 0.682206, 0.683245, 0.679243, 0.679867, 0.683269, 0.684295, 0.683413, 0.680493, 0.679955, 0.678963, 0.682766, 0.673598, 0.671597, 0.666574, 0.663446, 0.667601, 0.668477, 0.665555, 0.662152, 0.662522, 0.660120, 0.662669, 0.655395, 0.654975, 0.650894, 0.649805, 0.657027, 0.651257, 0.653693, 0.651595, 0.648364, 0.657846, 0.655029, 0.653853, 0.655822, 0.655323, 0.657220, 0.662427, 0.664912, 0.664669, 0.666448, 0.670243, 0.665729
#*# 	  0.667241, 0.668883, 0.670613, 0.670802, 0.668135, 0.671615, 0.675380, 0.676697, 0.675235, 0.676776, 0.680438, 0.681293, 0.682998, 0.683450, 0.678862, 0.679694, 0.680833, 0.681414, 0.682058, 0.675703, 0.675767, 0.675754, 0.672579, 0.671487, 0.671037, 0.666327, 0.663970, 0.668792, 0.666779, 0.663869, 0.661964, 0.657677, 0.658202, 0.656985, 0.654825, 0.659016, 0.656632, 0.654744, 0.654835, 0.654393, 0.654149, 0.651119, 0.650803, 0.651661, 0.653078, 0.656069, 0.657180, 0.658706, 0.661505, 0.663717, 0.665133, 0.666770, 0.668310, 0.667264
#*# 	  0.666653, 0.667358, 0.671604, 0.672163, 0.669906, 0.672534, 0.673967, 0.674411, 0.676923, 0.676721, 0.677839, 0.681114, 0.680839, 0.680946, 0.680059, 0.679123, 0.680689, 0.680736, 0.675835, 0.672936, 0.671603, 0.670457, 0.671950, 0.671465, 0.667765, 0.667211, 0.664239, 0.667465, 0.664552, 0.661184, 0.658856, 0.651998, 0.656206, 0.652659, 0.656119, 0.653324, 0.655552, 0.655446, 0.652311, 0.653126, 0.649809, 0.648837, 0.649165, 0.648670, 0.652854, 0.653422, 0.658422, 0.658945, 0.661169, 0.663084, 0.663885, 0.664611, 0.664222, 0.662860
#*# 	  0.664839, 0.667121, 0.670860, 0.669952, 0.671188, 0.671339, 0.671843, 0.673787, 0.673313, 0.676641, 0.676244, 0.678082, 0.680175, 0.677109, 0.679178, 0.676360, 0.676872, 0.676591, 0.671575, 0.673653, 0.670217, 0.671530, 0.669749, 0.669478, 0.666333, 0.663267, 0.663548, 0.660200, 0.659486, 0.654797, 0.654382, 0.653364, 0.651421, 0.654643, 0.651939, 0.653899, 0.653990, 0.652262, 0.650587, 0.650405, 0.646975, 0.649722, 0.645604, 0.648964, 0.651435, 0.652350, 0.655696, 0.657769, 0.660487, 0.661104, 0.662991, 0.663576, 0.662029, 0.661802
#*# 	  0.665544, 0.667415, 0.669878, 0.668521, 0.670106, 0.668832, 0.671751, 0.673608, 0.673226, 0.675203, 0.675855, 0.677283, 0.677659, 0.676486, 0.674688, 0.677020, 0.672482, 0.674136, 0.674483, 0.670601, 0.669359, 0.669454, 0.668460, 0.666189, 0.665189, 0.662990, 0.661411, 0.660355, 0.656397, 0.653586, 0.654086, 0.648572, 0.651717, 0.649071, 0.650224, 0.651870, 0.651199, 0.650867, 0.648632, 0.650239, 0.645210, 0.646814, 0.645609, 0.644684, 0.650271, 0.649016, 0.652604, 0.656600, 0.658563, 0.660636, 0.661259, 0.661792, 0.660485, 0.660887
#*# 	  0.662738, 0.664010, 0.669515, 0.669448, 0.669693, 0.670107, 0.671270, 0.672935, 0.675313, 0.674661, 0.673021, 0.674649, 0.675220, 0.675025, 0.675962, 0.677271, 0.676664, 0.675466, 0.675707, 0.672801, 0.672962, 0.670326, 0.669927, 0.670607, 0.665941, 0.664186, 0.661493, 0.661057, 0.656726, 0.654740, 0.651534, 0.649783, 0.651614, 0.650068, 0.651137, 0.651583, 0.649663, 0.653358, 0.647082, 0.650641, 0.645322, 0.645399, 0.644370, 0.644789, 0.646731, 0.648258, 0.653027, 0.655862, 0.660294, 0.657233, 0.662151, 0.662703, 0.659137, 0.659125
#*# 	  0.662546, 0.665482, 0.668372, 0.668983, 0.668626, 0.669901, 0.670092, 0.672887, 0.673565, 0.672794, 0.675158, 0.675126, 0.675893, 0.675249, 0.674516, 0.677178, 0.676135, 0.676425, 0.673986, 0.673903, 0.673016, 0.673161, 0.671510, 0.669006, 0.668378, 0.664689, 0.662557, 0.660932, 0.658440, 0.655775, 0.653375, 0.651527, 0.651938, 0.650293, 0.650958, 0.653343, 0.652020, 0.651614, 0.649912, 0.649432, 0.645432, 0.645738, 0.641997, 0.644073, 0.647232, 0.650350, 0.654175, 0.655794, 0.658538, 0.662448, 0.660277, 0.662754, 0.656962, 0.661644
#*# 	  0.665099, 0.665793, 0.670070, 0.671696, 0.671238, 0.672473, 0.674048, 0.674016, 0.674758, 0.674675, 0.675276, 0.677356, 0.677254, 0.677846, 0.677705, 0.678792, 0.679244, 0.678796, 0.678542, 0.675024, 0.676293, 0.674602, 0.672220, 0.672009, 0.667470, 0.666547, 0.665560, 0.664063, 0.660789, 0.656891, 0.656192, 0.651140, 0.655360, 0.652484, 0.653676, 0.652780, 0.652066, 0.654658, 0.650411, 0.650275, 0.645957, 0.647044, 0.645930, 0.644506, 0.649846, 0.647500, 0.653353, 0.657794, 0.658646, 0.662640, 0.662542, 0.660780, 0.663581, 0.660886
#*# 	  0.665100, 0.667743, 0.672119, 0.671130, 0.673853, 0.672338, 0.675474, 0.677189, 0.676130, 0.674786, 0.676496, 0.678926, 0.678628, 0.678753, 0.680557, 0.680545, 0.680542, 0.681933, 0.676657, 0.674990, 0.673187, 0.675580, 0.673510, 0.672691, 0.669501, 0.668040, 0.666973, 0.664966, 0.660707, 0.658570, 0.654017, 0.654627, 0.655033, 0.655053, 0.655090, 0.655666, 0.656332, 0.656040, 0.654675, 0.653531, 0.651010, 0.645939, 0.648779, 0.648229, 0.649390, 0.653027, 0.655729, 0.659217, 0.662309, 0.663391, 0.663947, 0.664942, 0.665115, 0.662464
#*# 	  0.665074, 0.668723, 0.671446, 0.672182, 0.671477, 0.673213, 0.675489, 0.676362, 0.673405, 0.674963, 0.677012, 0.678972, 0.679892, 0.679789, 0.679992, 0.680601, 0.680328, 0.677664, 0.676081, 0.674480, 0.674013, 0.672969, 0.675329, 0.670913, 0.670561, 0.667235, 0.666795, 0.665112, 0.661459, 0.659008, 0.658114, 0.651827, 0.657035, 0.652866, 0.656937, 0.655446, 0.656051, 0.657038, 0.654202, 0.655801, 0.651361, 0.648944, 0.649491, 0.647502, 0.649561, 0.652925, 0.655383, 0.659490, 0.663698, 0.663349, 0.664550, 0.667329, 0.665408, 0.663319
#*# 	  0.660289, 0.664390, 0.668680, 0.666007, 0.665689, 0.667354, 0.670518, 0.669011, 0.670048, 0.670321, 0.670829, 0.673576, 0.674538, 0.677479, 0.674628, 0.672777, 0.673714, 0.672450, 0.670133, 0.670867, 0.669038, 0.670725, 0.669319, 0.669924, 0.667663, 0.664165, 0.664913, 0.662713, 0.658451, 0.657329, 0.653341, 0.652085, 0.652236, 0.653942, 0.652123, 0.653684, 0.654961, 0.652767, 0.654905, 0.650508, 0.649677, 0.648178, 0.646425, 0.648484, 0.647491, 0.649483, 0.656027, 0.656689, 0.659883, 0.662701, 0.664551, 0.665490, 0.664964, 0.664997
#*# 	  0.659142, 0.660556, 0.665398, 0.667448, 0.665056, 0.667293, 0.668005, 0.669157, 0.669118, 0.670066, 0.670570, 0.672453, 0.674570, 0.675614, 0.674014, 0.673913, 0.672062, 0.672317, 0.669975, 0.669741, 0.669638, 0.669041, 0.668766, 0.668451, 0.665835, 0.665105, 0.662649, 0.664630, 0.658046, 0.658506, 0.655269, 0.651961, 0.652687, 0.652255, 0.653420, 0.652312, 0.653286, 0.654378, 0.652359, 0.653144, 0.647749, 0.648886, 0.648842, 0.645372, 0.650638, 0.649393, 0.658491, 0.655082, 0.663635, 0.663890, 0.665726, 0.667301, 0.667323, 0.666741
#*# 	  0.658613, 0.660226, 0.665098, 0.664493, 0.664746, 0.664761, 0.668907, 0.667748, 0.668254, 0.673031, 0.673884, 0.671888, 0.672693, 0.671764, 0.673260, 0.674803, 0.669624, 0.672791, 0.669118, 0.669243, 0.670542, 0.670303, 0.666598, 0.665035, 0.667904, 0.662120, 0.664141, 0.659441, 0.658971, 0.652343, 0.654022, 0.649981, 0.652805, 0.649516, 0.647379, 0.650856, 0.650665, 0.651343, 0.651716, 0.650369, 0.647541, 0.646464, 0.647335, 0.647315, 0.649091, 0.651585, 0.655265, 0.658807, 0.660864, 0.666482, 0.664479, 0.670094, 0.668168, 0.667735
#*# 	  0.657798, 0.659647, 0.662722, 0.664139, 0.660922, 0.662305, 0.666836, 0.670660, 0.667651, 0.669170, 0.670092, 0.672611, 0.672453, 0.672329, 0.671558, 0.669459, 0.668329, 0.670687, 0.669780, 0.666632, 0.665792, 0.665905, 0.663040, 0.664934, 0.659361, 0.662646, 0.657052, 0.656442, 0.654231, 0.651850, 0.647574, 0.647112, 0.647468, 0.646105, 0.646769, 0.645673, 0.647917, 0.647627, 0.646037, 0.648555, 0.646336, 0.645150, 0.642242, 0.643162, 0.648781, 0.645829, 0.656457, 0.653143, 0.660923, 0.656433, 0.664641, 0.670783, 0.666188, 0.668247
#*# 	  0.652837, 0.655791, 0.658670, 0.660172, 0.659694, 0.660908, 0.663128, 0.664069, 0.660727, 0.664933, 0.665090, 0.668181, 0.669033, 0.667501, 0.666641, 0.668185, 0.665253, 0.669170, 0.664469, 0.659097, 0.660401, 0.661275, 0.658334, 0.659296, 0.656072, 0.655008, 0.652681, 0.651637, 0.650282, 0.645364, 0.642111, 0.640645, 0.643675, 0.641518, 0.641209, 0.642533, 0.642064, 0.644508, 0.643603, 0.644103, 0.640803, 0.640073, 0.640086, 0.640476, 0.643770, 0.645143, 0.650987, 0.650987, 0.656628, 0.660327, 0.659450, 0.664167, 0.662947, 0.662363
#*# 	  0.655651, 0.657405, 0.661415, 0.663954, 0.662517, 0.663414, 0.664982, 0.663840, 0.664608, 0.663471, 0.666925, 0.671016, 0.669837, 0.669306, 0.667551, 0.669805, 0.666923, 0.667290, 0.665216, 0.662601, 0.661698, 0.662513, 0.663393, 0.658308, 0.659070, 0.657350, 0.655174, 0.654993, 0.650238, 0.649201, 0.640583, 0.645397, 0.643086, 0.644372, 0.642823, 0.642551, 0.644917, 0.644183, 0.644592, 0.644618, 0.641353, 0.640515, 0.640227, 0.641042, 0.645615, 0.647938, 0.650642, 0.651803, 0.657247, 0.659327, 0.661077, 0.663094, 0.665850, 0.665272
#*# 	  0.661889, 0.664409, 0.671344, 0.667751, 0.664505, 0.663755, 0.670026, 0.670632, 0.670189, 0.671153, 0.673585, 0.672605, 0.674916, 0.678469, 0.676446, 0.669630, 0.668892, 0.671130, 0.672104, 0.667037, 0.669040, 0.667605, 0.667337, 0.666719, 0.666807, 0.666886, 0.659529, 0.658654, 0.653788, 0.653399, 0.649028, 0.646938, 0.649055, 0.649461, 0.649443, 0.651369, 0.655170, 0.650751, 0.649112, 0.652288, 0.647999, 0.650563, 0.646329, 0.649878, 0.653533, 0.650228, 0.660113, 0.660866, 0.663631, 0.666802, 0.668628, 0.673257, 0.672424, 0.673768
#*# 	  0.667390, 0.669748, 0.672793, 0.674836, 0.674752, 0.677817, 0.675502, 0.675324, 0.675518, 0.676365, 0.677646, 0.679012, 0.678187, 0.677059, 0.678015, 0.679841, 0.675748, 0.675428, 0.675534, 0.672106, 0.673040, 0.672914, 0.673635, 0.671960, 0.670812, 0.669806, 0.672454, 0.665345, 0.660745, 0.658164, 0.655641, 0.653969, 0.653742, 0.656283, 0.653449, 0.654332, 0.657804, 0.656983, 0.658448, 0.655568, 0.655911, 0.655748, 0.654500, 0.655283, 0.655932, 0.656162, 0.660553, 0.665533, 0.673909, 0.674727, 0.675193, 0.678865, 0.679022, 0.679174
#*# 	  0.672461, 0.672416, 0.677920, 0.679819, 0.678105, 0.680750, 0.680080, 0.680392, 0.681123, 0.684283, 0.683751, 0.680739, 0.679162, 0.683171, 0.681742, 0.682336, 0.679810, 0.679182, 0.679032, 0.675433, 0.678274, 0.678590, 0.677474, 0.673481, 0.676485, 0.675423, 0.673300, 0.672354, 0.666450, 0.663003, 0.659730, 0.660028, 0.657860, 0.656853, 0.656582, 0.659170, 0.659778, 0.661091, 0.658527, 0.660727, 0.656349, 0.658338, 0.658907, 0.658785, 0.659612, 0.661345, 0.667329, 0.668566, 0.675706, 0.676613, 0.679351, 0.681830, 0.684584, 0.683977
#*# 	  0.676746, 0.677090, 0.678702, 0.680937, 0.678543, 0.679537, 0.681294, 0.683298, 0.683356, 0.681482, 0.681961, 0.684576, 0.684612, 0.684671, 0.683210, 0.680953, 0.679001, 0.679410, 0.680102, 0.679969, 0.676668, 0.677899, 0.679001, 0.679365, 0.676516, 0.677440, 0.674179, 0.671720, 0.665994, 0.664687, 0.666183, 0.659314, 0.660832, 0.660856, 0.660458, 0.660384, 0.661451, 0.661245, 0.657678, 0.658428, 0.664089, 0.658149, 0.658999, 0.660911, 0.663196, 0.663000, 0.668738, 0.669917, 0.676928, 0.676076, 0.678158, 0.684939, 0.686443, 0.685569
#*# 	  0.675308, 0.677674, 0.680239, 0.681456, 0.680727, 0.683546, 0.682441, 0.679651, 0.679731, 0.681961, 0.683527, 0.684531, 0.684890, 0.685565, 0.684353, 0.683526, 0.683086, 0.680872, 0.678090, 0.675144, 0.678006, 0.676980, 0.679855, 0.677344, 0.678037, 0.674007, 0.673360, 0.672984, 0.667805, 0.661429, 0.662349, 0.660327, 0.659788, 0.660832, 0.659947, 0.662634, 0.660513, 0.663313, 0.660347, 0.661948, 0.658867, 0.660146, 0.657752, 0.661773, 0.661187, 0.665555, 0.669763, 0.671385, 0.679215, 0.676890, 0.681750, 0.685753, 0.686287, 0.689657
#*# 	  0.676866, 0.678941, 0.680326, 0.679965, 0.679787, 0.679646, 0.680256, 0.681008, 0.680087, 0.680041, 0.681878, 0.685715, 0.686580, 0.685440, 0.683035, 0.684403, 0.680061, 0.681218, 0.679156, 0.676235, 0.677531, 0.679053, 0.678624, 0.677202, 0.675173, 0.674418, 0.672206, 0.672248, 0.664903, 0.663609, 0.660771, 0.659505, 0.661237, 0.658914, 0.662273, 0.660694, 0.663951, 0.661868, 0.662321, 0.663605, 0.659318, 0.661158, 0.660926, 0.659517, 0.665884, 0.666401, 0.671463, 0.672152, 0.677285, 0.680250, 0.680730, 0.687998, 0.684384, 0.689718
#*# 	  0.676880, 0.679307, 0.678361, 0.677123, 0.675928, 0.678626, 0.677388, 0.678543, 0.677105, 0.678380, 0.678779, 0.684201, 0.685234, 0.681048, 0.678654, 0.678586, 0.680968, 0.677106, 0.680764, 0.675581, 0.677608, 0.678811, 0.679726, 0.678795, 0.673890, 0.667295, 0.669541, 0.667067, 0.661857, 0.662152, 0.659071, 0.657316, 0.657679, 0.657888, 0.660832, 0.660470, 0.660362, 0.662992, 0.661214, 0.662027, 0.657739, 0.660629, 0.656375, 0.662929, 0.663664, 0.666068, 0.669058, 0.669843, 0.675906, 0.678023, 0.680807, 0.683693, 0.684632, 0.686938
#*# 	  0.678697, 0.681134, 0.678614, 0.678779, 0.678104, 0.677180, 0.677727, 0.677954, 0.678799, 0.676429, 0.678875, 0.682191, 0.681377, 0.682061, 0.680277, 0.683121, 0.677952, 0.680130, 0.677823, 0.678802, 0.677318, 0.678253, 0.675523, 0.676192, 0.672238, 0.672160, 0.668789, 0.666855, 0.663400, 0.658959, 0.658722, 0.656241, 0.656824, 0.657239, 0.658953, 0.655851, 0.662130, 0.659345, 0.661186, 0.659957, 0.659029, 0.657193, 0.658229, 0.657705, 0.659404, 0.662854, 0.663818, 0.667472, 0.673258, 0.673584, 0.677666, 0.680055, 0.678894, 0.681026
#*# 	  0.680855, 0.679201, 0.680838, 0.679265, 0.678088, 0.677877, 0.678042, 0.679113, 0.677017, 0.675943, 0.676344, 0.678444, 0.677148, 0.679387, 0.679391, 0.678889, 0.677864, 0.677919, 0.678888, 0.677137, 0.676400, 0.675886, 0.672981, 0.674416, 0.672488, 0.668400, 0.668658, 0.663047, 0.662135, 0.657827, 0.656767, 0.654154, 0.655256, 0.657914, 0.654181, 0.657695, 0.658340, 0.657132, 0.656834, 0.657566, 0.654020, 0.656722, 0.654333, 0.657950, 0.656709, 0.659437, 0.664442, 0.664317, 0.669887, 0.672175, 0.673842, 0.674696, 0.678701, 0.679098
#*# 	  0.682089, 0.682619, 0.683405, 0.681867, 0.680019, 0.681054, 0.679284, 0.678874, 0.678581, 0.677923, 0.679349, 0.680895, 0.680081, 0.680710, 0.678819, 0.680638, 0.677229, 0.678087, 0.676886, 0.676603, 0.673962, 0.676627, 0.674713, 0.674262, 0.670653, 0.669292, 0.666002, 0.662947, 0.659303, 0.656008, 0.655235, 0.651869, 0.654794, 0.652334, 0.654556, 0.654057, 0.654575, 0.655374, 0.654601, 0.650701, 0.654654, 0.650780, 0.651891, 0.654530, 0.655530, 0.658832, 0.661282, 0.664458, 0.669570, 0.667911, 0.672563, 0.673588, 0.675755, 0.677438
#*# 	  0.681439, 0.682276, 0.683442, 0.683620, 0.681430, 0.681496, 0.680345, 0.678133, 0.678177, 0.679133, 0.679044, 0.681026, 0.680607, 0.680747, 0.680619, 0.678782, 0.677374, 0.677195, 0.675233, 0.675834, 0.675934, 0.672825, 0.673655, 0.671406, 0.671322, 0.667266, 0.663584, 0.661711, 0.655363, 0.652572, 0.652264, 0.651166, 0.648719, 0.652090, 0.648625, 0.650268, 0.651752, 0.651520, 0.648653, 0.651976, 0.648061, 0.649379, 0.650698, 0.651408, 0.653894, 0.656300, 0.661191, 0.661262, 0.666377, 0.666195, 0.671568, 0.671637, 0.671296, 0.674467
#*# 	  0.677132, 0.678270, 0.676931, 0.679073, 0.676304, 0.675367, 0.676139, 0.676583, 0.674780, 0.675942, 0.675847, 0.678036, 0.675867, 0.675682, 0.675141, 0.675474, 0.673161, 0.673703, 0.669741, 0.670929, 0.668062, 0.668717, 0.665253, 0.665049, 0.662926, 0.657215, 0.657978, 0.651716, 0.650527, 0.647919, 0.646513, 0.641473, 0.646632, 0.643470, 0.641564, 0.645063, 0.643267, 0.642415, 0.642919, 0.644058, 0.642532, 0.643460, 0.646963, 0.645649, 0.649609, 0.651131, 0.656328, 0.659594, 0.661669, 0.665024, 0.665374, 0.666729, 0.666026, 0.669290
#*# x_count = 54
#*# y_count = 55
#*# mesh_x_pps = 1
#*# mesh_y_pps = 1
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 39.06
#*# max_x = 294.46
#*# min_y = 30.15
#*# max_y = 290.85
#*#
#*# [cartographer model default]
#*# model_coef = 1.2986668879138237,
#*# 	1.7115265094531757,
#*# 	0.7374404380758087,
#*# 	0.37229202916387344,
#*# 	0.5137417401349507,
#*# 	0.5109309062114373,
#*# 	-0.37351327080749985,
#*# 	-0.4888049519336094,
#*# 	0.37356511739012765,
#*# 	0.3459725227544271
#*# model_domain = 3.072696345386786e-07,3.279724062970615e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 50.037417
#*# model_offset = 0.00000
