[include shell_command.cfg]
[include mainsail.cfg]
#[include scanner.cfg]
[include cartographer.cfg]
[include probe.cfg]
[include ebb36.cfg]
[include temp.cfg]
[include steppers.cfg]
[include test_probe_accuracy.cfg]
#[include fan_monitor.cfg]
#[include stealthburner_led_effects_barf.cfg]
#[include voron0-display.cfg]
#[include klicky-probe.cfg]
#[include display.cfg]
#[include menu.cfg]
[include testspeed.cfg]
#[include knomi.cfg]
[include timelapse.cfg]
[include tmc_autotune.cfg]
[include bedfans.cfg]
#[include fan_monitor.cfg]
#[include sb2040.cfg]
[include Adaptive_Mesh.cfg]
[include shaketune.cfg]
#[include nevermore.cfg]
[include stealthburner_leds.cfg]
[include sfs.cfg]
[include git.cfg]
#[include led_progress.cfg]

[mcu ebb36]
canbus_uuid: 4f356d505027 #71b5bbca6c55

[mcu]
serial:  /dev/serial/by-id/usb-Klipper_stm32f446xx_25004B000350534E4E313020-if00
#serial: /dev/ttyACM0

[input_shaper]
shaper_freq_x: 52.6
shaper_type_x: mzv
damping_ratio_x: 0.057
shaper_freq_y: 37.2
shaper_type_y: mzv
damping_ratio_y: 0.077

[exclude_object]

[force_move]
enable_force_move: True

[printer]
kinematics: corexy
max_velocity: 450 #450  
max_accel: 9000       #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 450
square_corner_velocity: 8.0



[homing_override]
axes: z
set_position_z: 0
gcode:
   BED_MESH_CLEAR
   G90
   G0 Z5 F600
   STATUS_homing
   LOWERCURRENT
   G28 X Y
   #G0 X235 Y342 F3600 
   G0 X175 Y175 Z30 F3600
   STATUS_CALIBRATING_Z
   G28 Z
   RESETCURRENT
   G0 Z10 F1800
   STATUS_READY
   #G0 X175 Y175 Z30 F3600


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F18000.0                                                                                      ; move up 5mm
        G90                                                                                                 ; absolute positioning
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F18000.0                   ; park nozzle at front center
    {% endif %}
    OFF                                                                                                     ; turn everything off                                                                                     ; set logo back to white
timeout: 3600 # 1 hr


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

    
[pause_resume]

[display_status]

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        LOWERCURRENT
        G28
        RESETCURRENT
    {% endif %}

    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    STATUS_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
    
[gcode_macro PID_BED]
gcode:
      PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro PID_NOZZLE]
gcode:
      M106 S64
      PID_CALIBRATE HEATER=extruder TARGET=260

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    LOWERCURRENT
    G28
    RESETCURRENT
   # G0 X175 Y175 Z30 F3600
    STATUS_READY
    
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro PRINT_START]
gcode:
    STATUS_HOMING
    LOWERCURRENT
    G28
    RESETCURRENT
    STATUS_READY
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M190 S{ params.BED }       ; Wait for bed to get to target temperature.
    M117 Preheating nozzle
    M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
    M107                       ; Print fan off
    #G1 X175 Y175 Z50 F5000.0
    STATUS_HEATING
    M117 Heating nozzle
    M109 S{ params.EXTRUDER }  ; Wait for nozzle to get to target temperature.
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    STATUS_CLEANING
    clean_nozzle
        #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
    #BED_MESH_CLEAR
    #VORON_PURGE
  #  G28 Z
    STATUS_READY
    set_nozzle_leds_on
    #SET_FAN_SPEED FAN=Nevermore SPEED=0.7
    BED_MESH_PROFILE LOAD="default"    
    G1 Z20 F3000                   ; move nozzle away from bed
    G1 X10 Y20 Z0.3 F5000.0 ; move to start-line position
    G1 X10 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
    G1 X11 Y200.0 Z0.3 F5000.0 ; move to side a little
    G1 X11 Y20 Z0.3 F1500.0 E30 ; draw 2nd line
    G1 E27 F3000 ; retract filament 3mm
    G92 E0 ; reset extruder
    G1 Z1.0 F3000 ; move z up little to prevent scratching of surface

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    M107                           ; turn off fan
    G1 Z50 F3000                    ; move nozzle up 50mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    STATUS_OFF
    

[gcode_macro clean_nozzle]

variable_location_bucket_rear:      True
variable_enable_purge:              True
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:            10            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
variable_brush_top:             2
variable_clearance_z:           25	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        10000	         ; Nozzle wipe speed in mm/min.
variable_brush_start:        260
variable_brush_width:          70	
variable_brush_front:       0          
variable_brush_depth:       0          
variable_bucket_left_width:    92   
variable_bucket_right_width:   40            
variable_bucket_gap:           22	
variable_bucket_start:         0 #260
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35
	
# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
 number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.183
#*# pid_ki = 3.088
#*# pid_kd = 68.945
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 47.461
#*# pid_ki = 1.189
#*# pid_kd = 473.419
#*#
#*# [bed_mesh default00]
#*# version = 1
#*# points =
#*# 	-0.002500, 0.045000, 0.000000, -0.030417, -0.015833
#*# 	0.013750, 0.015000, 0.000417, -0.019167, -0.007500
#*# 	0.002917, 0.011250, 0.000000, -0.026250, -0.026667
#*# 	-0.006667, 0.010417, 0.002917, -0.025417, 0.012917
#*# 	0.025833, -0.011250, -0.009583, 0.000417, -0.005833
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	0.084167, 0.088750, 0.078750, 0.055417, 0.062083, 0.077500, 0.080000
#*# 	0.040417, 0.055000, 0.048333, 0.060417, 0.046667, 0.063750, 0.070417
#*# 	0.050417, 0.037917, 0.040417, 0.035417, 0.040000, 0.028750, 0.034167
#*# 	0.028750, 0.024583, 0.013750, 0.000000, 0.007500, 0.023750, 0.039583
#*# 	0.013333, 0.008333, -0.007083, 0.007917, 0.000833, 0.007083, 0.021250
#*# 	0.013750, 0.030833, 0.056250, 0.012083, 0.030000, 0.015000, 0.043750
#*# 	0.023750, 0.008333, 0.015000, 0.005417, 0.016250, 0.031667, 0.019167
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default3]
#*# version = 1
#*# points =
#*# 	0.054583, 0.044583, 0.056667, 0.021667, 0.035000, 0.023750, 0.026250
#*# 	0.024167, 0.020000, 0.012083, -0.017500, -0.013333, -0.010000, 0.028333
#*# 	0.033333, 0.012917, 0.010000, -0.016250, -0.016667, 0.001250, 0.035417
#*# 	0.024583, 0.022083, 0.025833, 0.000000, -0.012500, 0.018333, 0.029167
#*# 	0.012083, 0.042500, 0.008333, -0.001667, -0.037083, -0.014167, 0.015417
#*# 	0.003750, 0.006667, 0.005000, 0.014167, -0.005417, 0.014167, 0.043333
#*# 	0.053333, 0.050000, 0.040833, 0.048333, 0.036667, 0.052500, 0.087500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*#
#*# [probe]
#*# z_offset = -0.700
#*#
#*# [bed_mesh default4]
#*# version = 1
#*# points =
#*# 	0.153750, 0.122500, 0.126250, 0.118750, 0.070000, 0.106250, 0.127500
#*# 	0.066250, 0.072500, 0.048750, 0.053750, 0.068750, 0.091250, 0.141250
#*# 	0.067500, 0.048750, 0.042500, 0.060000, 0.030000, 0.053750, 0.136250
#*# 	0.016250, 0.001250, 0.040000, 0.000000, 0.011250, 0.056250, 0.098750
#*# 	0.002500, 0.005000, -0.007500, 0.015000, 0.000000, 0.020000, 0.075000
#*# 	0.043750, -0.035000, 0.016250, 0.022500, 0.001250, 0.030000, 0.083750
#*# 	0.081250, 0.036250, -0.015000, -0.003750, 0.007500, 0.022500, 0.071250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.534049, 0.532186, 0.535961, 0.539119, 0.538552, 0.535771, 0.536289, 0.534309, 0.534299, 0.533592, 0.532654, 0.531495, 0.530801, 0.529257, 0.528091, 0.526805, 0.527778, 0.528939, 0.529348, 0.529479, 0.526156, 0.530183, 0.529274, 0.528358
#*# 	0.536465, 0.541177, 0.543334, 0.543525, 0.541719, 0.539046, 0.535431, 0.535011, 0.533180, 0.535634, 0.534054, 0.531117, 0.532569, 0.530161, 0.529689, 0.528292, 0.532604, 0.531549, 0.531370, 0.532006, 0.530259, 0.531330, 0.532752, 0.532300
#*# 	0.535658, 0.537827, 0.537699, 0.540243, 0.538203, 0.538478, 0.537940, 0.534793, 0.534019, 0.533255, 0.532774, 0.533053, 0.530339, 0.531595, 0.529049, 0.529949, 0.531332, 0.531152, 0.531089, 0.530732, 0.532718, 0.532105, 0.531739, 0.534336
#*# 	0.531324, 0.534572, 0.533668, 0.535267, 0.532357, 0.533495, 0.531576, 0.534644, 0.533528, 0.531338, 0.531144, 0.530425, 0.531805, 0.528497, 0.529071, 0.527682, 0.528726, 0.528668, 0.529798, 0.528800, 0.529616, 0.528046, 0.530261, 0.531237
#*# 	0.532034, 0.532878, 0.532817, 0.533003, 0.531683, 0.529898, 0.528201, 0.527257, 0.527287, 0.533094, 0.527496, 0.529511, 0.526788, 0.526292, 0.526521, 0.524818, 0.526020, 0.527349, 0.526549, 0.528619, 0.526890, 0.528542, 0.528550, 0.529483
#*# 	0.531327, 0.530091, 0.531475, 0.529693, 0.528430, 0.526995, 0.525477, 0.522406, 0.525667, 0.526983, 0.530385, 0.524601, 0.526783, 0.523521, 0.523560, 0.523927, 0.524293, 0.522026, 0.523595, 0.524957, 0.525324, 0.526724, 0.525980, 0.527437
#*# 	0.529901, 0.530098, 0.531839, 0.529243, 0.527369, 0.526033, 0.521855, 0.522466, 0.519507, 0.525063, 0.526328, 0.523333, 0.521661, 0.519749, 0.521629, 0.520168, 0.523043, 0.521179, 0.521958, 0.523254, 0.523767, 0.524469, 0.526402, 0.526308
#*# 	0.531251, 0.529839, 0.530707, 0.528950, 0.527166, 0.525226, 0.521808, 0.521209, 0.520587, 0.522940, 0.526190, 0.526959, 0.524866, 0.523020, 0.519537, 0.519881, 0.519590, 0.522093, 0.519531, 0.522902, 0.521608, 0.526230, 0.525675, 0.525866
#*# 	0.531080, 0.531787, 0.531231, 0.527943, 0.527505, 0.525281, 0.522394, 0.520766, 0.519823, 0.522279, 0.523918, 0.524314, 0.525670, 0.523220, 0.526505, 0.521941, 0.522506, 0.518525, 0.520010, 0.521308, 0.520920, 0.524136, 0.522122, 0.524719
#*# 	0.528495, 0.529162, 0.528848, 0.527357, 0.526445, 0.523491, 0.522472, 0.520193, 0.519843, 0.520298, 0.519552, 0.520102, 0.516534, 0.518351, 0.516712, 0.519626, 0.521125, 0.520270, 0.519813, 0.521424, 0.522843, 0.520766, 0.521362, 0.522102
#*# 	0.525914, 0.524985, 0.526211, 0.523512, 0.522078, 0.521869, 0.517781, 0.516666, 0.516018, 0.515693, 0.517392, 0.517936, 0.514738, 0.515040, 0.512863, 0.512708, 0.515125, 0.515171, 0.516790, 0.516731, 0.518172, 0.515134, 0.516317, 0.518459
#*# 	0.522200, 0.522493, 0.522342, 0.521601, 0.521476, 0.519041, 0.518174, 0.515252, 0.513351, 0.514821, 0.513381, 0.513879, 0.512596, 0.511431, 0.509292, 0.510587, 0.510451, 0.511947, 0.511532, 0.512152, 0.512093, 0.513294, 0.514145, 0.514305
#*# 	0.521126, 0.521330, 0.521900, 0.521006, 0.521003, 0.519762, 0.516594, 0.515129, 0.512583, 0.514113, 0.512183, 0.511107, 0.510358, 0.510070, 0.509389, 0.510446, 0.512125, 0.510492, 0.513867, 0.512691, 0.512431, 0.513453, 0.511649, 0.513255
#*# 	0.516365, 0.517223, 0.517774, 0.517703, 0.515245, 0.516592, 0.515346, 0.511905, 0.512608, 0.510290, 0.510032, 0.508986, 0.506316, 0.506006, 0.505838, 0.503913, 0.506093, 0.506355, 0.509043, 0.509403, 0.508906, 0.510614, 0.509414, 0.510921
#*# 	0.513315, 0.515146, 0.515281, 0.514549, 0.514246, 0.513065, 0.511396, 0.509537, 0.507827, 0.506854, 0.505779, 0.503104, 0.504078, 0.500724, 0.499966, 0.500167, 0.502154, 0.501660, 0.504533, 0.504484, 0.504782, 0.504581, 0.507074, 0.506918
#*# 	0.512638, 0.512927, 0.514510, 0.515446, 0.512383, 0.512581, 0.508573, 0.507043, 0.508073, 0.507385, 0.505753, 0.503826, 0.501906, 0.499762, 0.496143, 0.498148, 0.496815, 0.498340, 0.499040, 0.501568, 0.502462, 0.504043, 0.502862, 0.504763
#*# 	0.512960, 0.514941, 0.516793, 0.515649, 0.516233, 0.513337, 0.512132, 0.508388, 0.507718, 0.506442, 0.506600, 0.503282, 0.500949, 0.497409, 0.497983, 0.494797, 0.496877, 0.496301, 0.498019, 0.499174, 0.501238, 0.500420, 0.504039, 0.500884
#*# 	0.512119, 0.514401, 0.516615, 0.516302, 0.514536, 0.514600, 0.511795, 0.510040, 0.508192, 0.508866, 0.507771, 0.504017, 0.503801, 0.499484, 0.496805, 0.497613, 0.494677, 0.497328, 0.498270, 0.499714, 0.500736, 0.502245, 0.501054, 0.500889
#*# 	0.511912, 0.514190, 0.515608, 0.513857, 0.515386, 0.512959, 0.511548, 0.509535, 0.507253, 0.507583, 0.506467, 0.505372, 0.502437, 0.499724, 0.499288, 0.495975, 0.496380, 0.496312, 0.497868, 0.498665, 0.500716, 0.500074, 0.501564, 0.500740
#*# 	0.508350, 0.509856, 0.510883, 0.511412, 0.510300, 0.511232, 0.509039, 0.508854, 0.507248, 0.506732, 0.505156, 0.503626, 0.500441, 0.498245, 0.495256, 0.496554, 0.494561, 0.497030, 0.497158, 0.498716, 0.500805, 0.501900, 0.500843, 0.499878
#*# 	0.508695, 0.509456, 0.511638, 0.511086, 0.512107, 0.512844, 0.511936, 0.509135, 0.510639, 0.507645, 0.506741, 0.504395, 0.501999, 0.499793, 0.498284, 0.496473, 0.497603, 0.497312, 0.499636, 0.499831, 0.501478, 0.501512, 0.500676, 0.498855
#*# 	0.506194, 0.507104, 0.508914, 0.510438, 0.509592, 0.511733, 0.510721, 0.508950, 0.508575, 0.509523, 0.506295, 0.503317, 0.500545, 0.499619, 0.497141, 0.497209, 0.496440, 0.497263, 0.497852, 0.500284, 0.500710, 0.501629, 0.500405, 0.497391
#*# 	0.503281, 0.503542, 0.506177, 0.506256, 0.507983, 0.507865, 0.507236, 0.506917, 0.505754, 0.504082, 0.505340, 0.502901, 0.499944, 0.495903, 0.493745, 0.495485, 0.494466, 0.495436, 0.494969, 0.496711, 0.497352, 0.498059, 0.496577, 0.493886
#*# 	0.497779, 0.498388, 0.499163, 0.501055, 0.503412, 0.501309, 0.502050, 0.500318, 0.499620, 0.500075, 0.497808, 0.496643, 0.492535, 0.489971, 0.488559, 0.488978, 0.488220, 0.489259, 0.489045, 0.490385, 0.491199, 0.492241, 0.491470, 0.487760
#*# x_count = 24
#*# y_count = 24
#*# mesh_x_pps = 1
#*# mesh_y_pps = 1
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 120.17
#*# max_x = 229.85
#*# min_y = 120.28
#*# max_y = 229.7
#*#
#*# [cartographer model default]
#*# model_coef = 1.3012470772652254,
#*# 	  1.724947171363938,
#*# 	  0.7364207955767581,
#*# 	  0.30851611714976573,
#*# 	  0.5201773022183281,
#*# 	  0.6926301225529573,
#*# 	  -0.382403485881158,
#*# 	  -0.7324935934363017,
#*# 	  0.3761315184841113,
#*# 	  0.459557103696636
#*# model_domain = 3.075662504098011e-07,3.279991238405517e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 43.156722
#*# model_offset = 0.00000

