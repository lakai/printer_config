[include shell_command.cfg]
[include mainsail.cfg]
[include cartographer.cfg]
[include probe.cfg]
[include ebb36.cfg]
[include temp.cfg]
[include steppers.cfg]
[include test_probe_accuracy.cfg]
#[include fan_monitor.cfg]
#[include stealthburner_led_effects_barf.cfg]
#[include voron0-display.cfg]
#[include klicky-probe.cfg]
#[include display.cfg]
#[include menu.cfg]
[include testspeed.cfg]
#[include knomi.cfg]
[include timelapse.cfg]
#[include tmc_autotune.cfg]
[include bedfans.cfg]
#[include fan_monitor.cfg]
#[include sb2040.cfg]
[include Adaptive_Mesh.cfg]
[include shaketune.cfg]
[include nevermore.cfg]
[include stealthburner_leds.cfg]
[include sfs.cfg]
[include git.cfg]
#[include led_progress.cfg]

[mcu ebb36]
canbus_uuid: 4f356d505027 #71b5bbca6c55

[mcu]
serial:  /dev/serial/by-id/usb-Klipper_stm32f446xx_25004B000350534E4E313020-if00
#serial: /dev/ttyACM0

[input_shaper]
shaper_freq_x: 52.6
shaper_type_x: mzv
damping_ratio_x: 0.057
shaper_freq_y: 37.2
shaper_type_y: mzv
damping_ratio_y: 0.077

[exclude_object]

[force_move]
enable_force_move: True

[printer]
kinematics: corexy
max_velocity: 450 #450  
max_accel: 9000       #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 450
square_corner_velocity: 8.0



[homing_override]
axes: z
set_position_z: 0
gcode:
   BED_MESH_CLEAR
   G90
   G0 Z5 F600
   STATUS_homing
   LOWERCURRENT
   G28 X Y
   #G0 X235 Y342 F3600 
   G0 X175 Y175 Z30 F3600
   STATUS_CALIBRATING_Z
   G28 Z
   RESETCURRENT
   G0 Z10 F1800
   STATUS_READY
   #G0 X175 Y175 Z30 F3600


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F18000.0                                                                                      ; move up 5mm
        G90                                                                                                 ; absolute positioning
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F18000.0                   ; park nozzle at front center
    {% endif %}
    OFF                                                                                                     ; turn everything off                                                                                     ; set logo back to white
timeout: 3600 # 1 hr


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

    
[pause_resume]

[display_status]

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        LOWERCURRENT
        G28
        RESETCURRENT
    {% endif %}

    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    STATUS_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
    
[gcode_macro PID_BED]
gcode:
      PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro PID_NOZZLE]
gcode:
      M106 S64
      PID_CALIBRATE HEATER=extruder TARGET=260

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    LOWERCURRENT
    G28
    RESETCURRENT
   # G0 X175 Y175 Z30 F3600
    STATUS_READY
    
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro PRINT_START]
gcode:
    STATUS_HOMING
    LOWERCURRENT
    G28
    RESETCURRENT
    STATUS_READY
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M190 S{ params.BED }       ; Wait for bed to get to target temperature.
    M117 Preheating nozzle
    M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
    M107                       ; Print fan off
    #G1 X175 Y175 Z50 F5000.0
    STATUS_HEATING
    M117 Heating nozzle
    M109 S{ params.EXTRUDER }  ; Wait for nozzle to get to target temperature.
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    STATUS_CLEANING
    clean_nozzle
        #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
    #BED_MESH_CLEAR
    #VORON_PURGE
  #  G28 Z
    STATUS_READY
    set_nozzle_leds_on
    SET_FAN_SPEED FAN=Nevermore SPEED=0.7
    BED_MESH_PROFILE LOAD="default"    
    G1 Z20 F3000                   ; move nozzle away from bed
    G1 X10 Y20 Z0.3 F5000.0 ; move to start-line position
    G1 X10 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
    G1 X11 Y200.0 Z0.3 F5000.0 ; move to side a little
    G1 X11 Y20 Z0.3 F1500.0 E30 ; draw 2nd line
    G1 E27 F3000 ; retract filament 3mm
    G92 E0 ; reset extruder
    G1 Z1.0 F3000 ; move z up little to prevent scratching of surface

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    M107                           ; turn off fan
    G1 Z50 F3000                    ; move nozzle up 50mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    STATUS_OFF
    

[gcode_macro clean_nozzle]

variable_location_bucket_rear:      True
variable_enable_purge:              True
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:            10            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
variable_brush_top:             2
variable_clearance_z:           25	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        10000	         ; Nozzle wipe speed in mm/min.
variable_brush_start:        260
variable_brush_width:          70	
variable_brush_front:       0          
variable_brush_depth:       0          
variable_bucket_left_width:    92   
variable_bucket_right_width:   40            
variable_bucket_gap:           22	
variable_bucket_start:         0 #260
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35
	
# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
 number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.271
#*# pid_ki = 3.105
#*# pid_kd = 73.788
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 52.678
#*# pid_ki = 1.697
#*# pid_kd = 408.913
#*#
#*# [bed_mesh default00]
#*# version = 1
#*# points =
#*# 	-0.002500, 0.045000, 0.000000, -0.030417, -0.015833
#*# 	0.013750, 0.015000, 0.000417, -0.019167, -0.007500
#*# 	0.002917, 0.011250, 0.000000, -0.026250, -0.026667
#*# 	-0.006667, 0.010417, 0.002917, -0.025417, 0.012917
#*# 	0.025833, -0.011250, -0.009583, 0.000417, -0.005833
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	0.084167, 0.088750, 0.078750, 0.055417, 0.062083, 0.077500, 0.080000
#*# 	0.040417, 0.055000, 0.048333, 0.060417, 0.046667, 0.063750, 0.070417
#*# 	0.050417, 0.037917, 0.040417, 0.035417, 0.040000, 0.028750, 0.034167
#*# 	0.028750, 0.024583, 0.013750, 0.000000, 0.007500, 0.023750, 0.039583
#*# 	0.013333, 0.008333, -0.007083, 0.007917, 0.000833, 0.007083, 0.021250
#*# 	0.013750, 0.030833, 0.056250, 0.012083, 0.030000, 0.015000, 0.043750
#*# 	0.023750, 0.008333, 0.015000, 0.005417, 0.016250, 0.031667, 0.019167
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default3]
#*# version = 1
#*# points =
#*# 	0.054583, 0.044583, 0.056667, 0.021667, 0.035000, 0.023750, 0.026250
#*# 	0.024167, 0.020000, 0.012083, -0.017500, -0.013333, -0.010000, 0.028333
#*# 	0.033333, 0.012917, 0.010000, -0.016250, -0.016667, 0.001250, 0.035417
#*# 	0.024583, 0.022083, 0.025833, 0.000000, -0.012500, 0.018333, 0.029167
#*# 	0.012083, 0.042500, 0.008333, -0.001667, -0.037083, -0.014167, 0.015417
#*# 	0.003750, 0.006667, 0.005000, 0.014167, -0.005417, 0.014167, 0.043333
#*# 	0.053333, 0.050000, 0.040833, 0.048333, 0.036667, 0.052500, 0.087500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*#
#*# [probe]
#*# z_offset = -0.700
#*#
#*# [bed_mesh default4]
#*# version = 1
#*# points =
#*# 	0.153750, 0.122500, 0.126250, 0.118750, 0.070000, 0.106250, 0.127500
#*# 	0.066250, 0.072500, 0.048750, 0.053750, 0.068750, 0.091250, 0.141250
#*# 	0.067500, 0.048750, 0.042500, 0.060000, 0.030000, 0.053750, 0.136250
#*# 	0.016250, 0.001250, 0.040000, 0.000000, 0.011250, 0.056250, 0.098750
#*# 	0.002500, 0.005000, -0.007500, 0.015000, 0.000000, 0.020000, 0.075000
#*# 	0.043750, -0.035000, 0.016250, 0.022500, 0.001250, 0.030000, 0.083750
#*# 	0.081250, 0.036250, -0.015000, -0.003750, 0.007500, 0.022500, 0.071250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.520913, 0.520922, 0.521566, 0.524589, 0.522136, 0.517875, 0.518357, 0.515140, 0.517021, 0.516376, 0.516134, 0.515961, 0.512885, 0.515401, 0.514040, 0.515320, 0.515796, 0.516313, 0.516955, 0.518519, 0.521491, 0.521741
#*# 	  0.516349, 0.518432, 0.520218, 0.522350, 0.522022, 0.521689, 0.519793, 0.517032, 0.516975, 0.516097, 0.516695, 0.510629, 0.514660, 0.514150, 0.514728, 0.515248, 0.514369, 0.517236, 0.515034, 0.519525, 0.520443, 0.522979
#*# 	  0.514337, 0.516105, 0.515245, 0.519597, 0.516289, 0.517106, 0.519017, 0.518533, 0.516056, 0.516203, 0.514574, 0.514842, 0.512648, 0.512835, 0.512820, 0.514050, 0.513253, 0.515152, 0.515494, 0.516266, 0.519224, 0.519363
#*# 	  0.513855, 0.515375, 0.517617, 0.518757, 0.519197, 0.515306, 0.516128, 0.515132, 0.519625, 0.516791, 0.515151, 0.513459, 0.511623, 0.512745, 0.511570, 0.513383, 0.511655, 0.513366, 0.513163, 0.515116, 0.518690, 0.518740
#*# 	  0.512616, 0.513989, 0.517014, 0.517684, 0.516507, 0.516956, 0.514344, 0.512170, 0.517289, 0.516925, 0.513271, 0.513711, 0.512108, 0.511956, 0.512394, 0.510703, 0.512035, 0.512387, 0.511299, 0.515026, 0.515541, 0.518628
#*# 	  0.513678, 0.514067, 0.516016, 0.516503, 0.515717, 0.513237, 0.513304, 0.510782, 0.513826, 0.514998, 0.512866, 0.511400, 0.508741, 0.510118, 0.509163, 0.511513, 0.509056, 0.509023, 0.511201, 0.512868, 0.516909, 0.515987
#*# 	  0.513141, 0.513277, 0.515004, 0.516435, 0.512615, 0.513998, 0.510014, 0.509327, 0.511837, 0.513011, 0.515279, 0.513361, 0.512987, 0.508491, 0.508804, 0.509605, 0.507849, 0.510048, 0.509241, 0.513397, 0.513883, 0.515548
#*# 	  0.513977, 0.516318, 0.517080, 0.516128, 0.512425, 0.512217, 0.511034, 0.508936, 0.511333, 0.512357, 0.513186, 0.513555, 0.513348, 0.512765, 0.510886, 0.510006, 0.507138, 0.508458, 0.509808, 0.510513, 0.513957, 0.514632
#*# 	  0.511544, 0.512633, 0.513641, 0.510763, 0.510888, 0.511510, 0.507187, 0.507202, 0.506405, 0.507531, 0.507712, 0.505197, 0.507445, 0.504801, 0.508273, 0.508882, 0.507717, 0.508058, 0.507749, 0.509732, 0.510207, 0.509781
#*# 	  0.508986, 0.509345, 0.509412, 0.509545, 0.508449, 0.505955, 0.505653, 0.502961, 0.505009, 0.507099, 0.505546, 0.506367, 0.502392, 0.502035, 0.501377, 0.500850, 0.502637, 0.503240, 0.504875, 0.505068, 0.503902, 0.504912
#*# 	  0.504988, 0.506993, 0.505979, 0.508105, 0.505948, 0.505722, 0.501431, 0.501522, 0.501566, 0.502542, 0.501746, 0.501632, 0.500897, 0.497957, 0.499593, 0.498392, 0.499562, 0.499782, 0.499964, 0.499231, 0.502025, 0.501040
#*# 	  0.503746, 0.504011, 0.506000, 0.505973, 0.504285, 0.504481, 0.503848, 0.500305, 0.500545, 0.500685, 0.499269, 0.500023, 0.498088, 0.498292, 0.497891, 0.498854, 0.499451, 0.502422, 0.499801, 0.499518, 0.500098, 0.500748
#*# 	  0.501863, 0.501569, 0.500736, 0.503478, 0.500717, 0.500912, 0.499348, 0.497063, 0.496811, 0.493691, 0.495890, 0.498240, 0.495356, 0.494151, 0.495079, 0.494735, 0.495626, 0.497066, 0.498251, 0.497787, 0.498395, 0.496752
#*# 	  0.495823, 0.496851, 0.496660, 0.498047, 0.495363, 0.494991, 0.492818, 0.491745, 0.490965, 0.490719, 0.488655, 0.488035, 0.486210, 0.485880, 0.488819, 0.489241, 0.486943, 0.492472, 0.490865, 0.492596, 0.491412, 0.493188
#*# 	  0.493162, 0.494358, 0.494527, 0.497818, 0.493691, 0.491736, 0.489143, 0.488208, 0.487842, 0.487366, 0.486093, 0.483486, 0.481180, 0.482657, 0.484304, 0.482886, 0.484978, 0.484263, 0.486230, 0.486494, 0.485831, 0.487358
#*# 	  0.493515, 0.493192, 0.494999, 0.496305, 0.494080, 0.492850, 0.489328, 0.487705, 0.487450, 0.486778, 0.484277, 0.483603, 0.479199, 0.479132, 0.478976, 0.482381, 0.482539, 0.484648, 0.483782, 0.484397, 0.486969, 0.483893
#*# 	  0.492406, 0.493951, 0.495685, 0.495210, 0.491651, 0.491610, 0.492995, 0.485342, 0.486771, 0.487148, 0.483296, 0.483141, 0.479282, 0.480853, 0.482290, 0.477568, 0.482874, 0.484250, 0.482521, 0.483075, 0.483983, 0.481810
#*# 	  0.489781, 0.491137, 0.492434, 0.494178, 0.491450, 0.491719, 0.488668, 0.486911, 0.485766, 0.485873, 0.483071, 0.481833, 0.478369, 0.479958, 0.478486, 0.480706, 0.479917, 0.481837, 0.482349, 0.481972, 0.482066, 0.481548
#*# 	  0.486358, 0.489011, 0.490165, 0.489834, 0.490443, 0.488213, 0.486148, 0.483030, 0.484107, 0.483461, 0.481893, 0.479732, 0.478892, 0.477185, 0.478919, 0.477150, 0.479787, 0.479788, 0.480887, 0.481394, 0.481464, 0.480170
#*# 	  0.485684, 0.486576, 0.488630, 0.490307, 0.488080, 0.490557, 0.486304, 0.485795, 0.485464, 0.484872, 0.481058, 0.480385, 0.477056, 0.477693, 0.476560, 0.477870, 0.477433, 0.480375, 0.478785, 0.481529, 0.480919, 0.479819
#*# 	  0.484295, 0.485282, 0.487585, 0.487171, 0.488052, 0.488653, 0.485900, 0.485985, 0.484982, 0.483902, 0.481232, 0.478988, 0.477218, 0.477000, 0.477316, 0.476436, 0.476945, 0.477136, 0.479134, 0.479645, 0.478064, 0.478352
#*# 	  0.481637, 0.481605, 0.481340, 0.485279, 0.484557, 0.484552, 0.483884, 0.481762, 0.481216, 0.481059, 0.477952, 0.477127, 0.473700, 0.471623, 0.473350, 0.472340, 0.472664, 0.475060, 0.475233, 0.474995, 0.478357, 0.473994
#*# x_count = 22
#*# y_count = 22
#*# mesh_x_pps = 1
#*# mesh_y_pps = 1
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 124.28
#*# max_x = 225.53
#*# min_y = 125.15
#*# max_y = 224.85
#*#
#*# [cartographer model default]
#*# model_coef = 1.2877737088640422,
#*# 	1.715833326420503,
#*# 	0.7728672452449025,
#*# 	0.3113000045237157,
#*# 	0.35532774922865856,
#*# 	0.5934959871686682,
#*# 	-0.12272467438840831,
#*# 	-0.5150216230458063,
#*# 	0.2561145771448526,
#*# 	0.3458192770055879
#*# model_domain = 3.061748487846937e-07,3.277557014525121e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 29.396225
#*# model_offset = 0.00000
