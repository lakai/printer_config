#[include shell_command.cfg]
#[include mainsail.cfg]
[include ebb36.cfg]
[include cartographer.cfg]
[include probe.cfg]
[include temp.cfg]
[include steppers.cfg]
#[include test_probe_accuracy.cfg]
#[include fan_monitor.cfg]
#[include stealthburner_led_effects_barf.cfg]
#[include voron0-display.cfg]
#[include klicky-probe.cfg]
#[include display.cfg]
#[include menu.cfg]
[include testspeed.cfg]
#[include knomi.cfg]
#[include timelapse.cfg]
#[include tmc_autotune.cfg]
[include bedfans.cfg]
#[include fan_monitor.cfg]
#[include sb2040.cfg]
#[include KAMP_Settings.cfg]
[include shaketune.cfg]
#[include nevermore.cfg]
[include stealthburner_leds.cfg]
#[include sfs.cfg]
[include git.cfg]
#[include scanner.cfg]
#[include led_progress.cfg]

[mcu ebb36]
canbus_uuid: 4f356d505027 #71b5bbca6c55

[mcu]
serial:  /dev/serial/by-id/usb-Klipper_stm32f446xx_25004B000350534E4E313020-if00
#@serial: /dev/ttyACM0

[input_shaper]
shaper_freq_x: 52.6
shaper_type_x: mzv
damping_ratio_x: 0.057
shaper_freq_y: 37.2
shaper_type_y: mzv
damping_ratio_y: 0.077

[exclude_object]

[force_move]
enable_force_move: True

[printer]
kinematics: corexy
max_velocity: 450 #450  
max_accel: 9000       #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 450
square_corner_velocity: 8.0



[homing_override]
axes: z
set_position_z: 0
gcode:
   BED_MESH_CLEAR
   G90
   G0 Z5 F600
   STATUS_homing
   LOWERCURRENT
   G28 X Y
   #G0 X235 Y342 F3600 
   G0 X175 Y175 Z30 F3600
   STATUS_CALIBRATING_Z
   G28 Z
   RESETCURRENT
   G0 Z10 F1800
   STATUS_READY
   #G0 X175 Y175 Z30 F3600


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
        G91                                                                                                 ; relative positioning
        G1 Z5 F18000.0                                                                                      ; move up 5mm
        G90                                                                                                 ; absolute positioning
        G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F18000.0                   ; park nozzle at front center
    {% endif %}
    OFF                                                                                                     ; turn everything off                                                                                     ; set logo back to white
timeout: 3600 # 1 hr


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

    
[pause_resume]

[display_status]

[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        LOWERCURRENT
        G28
        RESETCURRENT
    {% endif %}

    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    STATUS_OFF

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME
    
[gcode_macro PID_BED]
gcode:
      PID_CALIBRATE HEATER=heater_bed TARGET=110

[gcode_macro PID_NOZZLE]
gcode:
      M106 S64
      PID_CALIBRATE HEATER=extruder TARGET=260

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    LOWERCURRENT
    G28
    RESETCURRENT
   # G0 X175 Y175 Z30 F3600
    STATUS_READY
    
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro PRINT_START]
gcode:
    STATUS_HOMING
    LOWERCURRENT
    G28
    RESETCURRENT
    STATUS_READY
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M190 S{ params.BED }       ; Wait for bed to get to target temperature.
    M117 Preheating nozzle
    M109 S150                  ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
    M107                       ; Print fan off
    #G1 X175 Y175 Z50 F5000.0
    STATUS_HEATING
    M117 Heating nozzle
    M109 S{ params.EXTRUDER }  ; Wait for nozzle to get to target temperature.
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    STATUS_CLEANING
    clean_nozzle
        #SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
    #SETUP_VORON_PURGE DISPLAY_PARAMETERS=1 ADAPTIVE_ENABLE=1
    #BED_MESH_CLEAR
    #VORON_PURGE
  #  G28 Z
    STATUS_READY
    set_nozzle_leds_on
    #SET_FAN_SPEED FAN=Nevermore SPEED=0.7
    BED_MESH_PROFILE LOAD="default"    
    G1 Z20 F3000                   ; move nozzle away from bed
    G1 X10 Y20 Z0.3 F5000.0 ; move to start-line position
    G1 X10 Y200.0 Z0.3 F1500.0 E15 ; draw 1st line
    G1 X11 Y200.0 Z0.3 F5000.0 ; move to side a little
    G1 X11 Y20 Z0.3 F1500.0 E30 ; draw 2nd line
    G1 E27 F3000 ; retract filament 3mm
    G92 E0 ; reset extruder
    G1 Z1.0 F3000 ; move z up little to prevent scratching of surface

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    M107                           ; turn off fan
    G1 Z50 F3000                    ; move nozzle up 50mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    STATUS_OFF
    

[gcode_macro clean_nozzle]

variable_location_bucket_rear:      True
variable_enable_purge:              True
variable_purge_len:            10	         ; Amount of filament, in mm, to purge.
variable_purge_spd:           150	         ; Speed, in mm/s, of the purge.
variable_purge_temp_min:      220	         ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret:            10            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.
variable_brush_top:             2
variable_clearance_z:           25	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:              3         ; Number of complete (A complete wipe: start left, go right, go left) wipes.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        10000	         ; Nozzle wipe speed in mm/min.
variable_brush_start:        260
variable_brush_width:          70	
variable_brush_front:       0          
variable_brush_depth:       0          
variable_bucket_left_width:    92   
variable_bucket_right_width:   40            
variable_bucket_gap:           22	
variable_bucket_start:         0 #260
variable_bucket_pos:            1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position for location_bucket_rear = True.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option or not.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(0, 1) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}

         ### Check if user chose to use rear location.
         {% if location_bucket_rear %}
            G1 Y{Ry} F{prep_spd_xy}
         {% else %}
            G1 Y{brush_front + (brush_depth / 2)} F{prep_spd_xy}
         {% endif %}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / 2) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start} F{prep_spd_xy}

      ## Check if user chose to use rear location.
      {% if location_bucket_rear %}
         G1 Y{Ry}
      {% else %}
         G1 Y{brush_front + (brush_depth / 2)}
      {% endif %}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_left_width / 4} F{prep_spd_xy} 

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
# Lower z stepper current (in case of crash). Referenced in my klicky homing overrides and in calibrate_z.
[gcode_macro LOWERCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.35 HOLDCURRENT=0.35
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.35 HOLDCURRENT=0.35
	
# Returns z steppers back to their currents specified in the config.
[gcode_macro RESETCURRENT]
gcode:
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}

[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
 number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
# keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
 show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

#[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.183
#*# pid_ki = 3.088
#*# pid_kd = 68.945
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 47.461
#*# pid_ki = 1.189
#*# pid_kd = 473.419
#*#
#*# [bed_mesh default00]
#*# version = 1
#*# points =
#*# 	-0.002500, 0.045000, 0.000000, -0.030417, -0.015833
#*# 	0.013750, 0.015000, 0.000417, -0.019167, -0.007500
#*# 	0.002917, 0.011250, 0.000000, -0.026250, -0.026667
#*# 	-0.006667, 0.010417, 0.002917, -0.025417, 0.012917
#*# 	0.025833, -0.011250, -0.009583, 0.000417, -0.005833
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [bed_mesh default1]
#*# version = 1
#*# points =
#*# 	0.084167, 0.088750, 0.078750, 0.055417, 0.062083, 0.077500, 0.080000
#*# 	0.040417, 0.055000, 0.048333, 0.060417, 0.046667, 0.063750, 0.070417
#*# 	0.050417, 0.037917, 0.040417, 0.035417, 0.040000, 0.028750, 0.034167
#*# 	0.028750, 0.024583, 0.013750, 0.000000, 0.007500, 0.023750, 0.039583
#*# 	0.013333, 0.008333, -0.007083, 0.007917, 0.000833, 0.007083, 0.021250
#*# 	0.013750, 0.030833, 0.056250, 0.012083, 0.030000, 0.015000, 0.043750
#*# 	0.023750, 0.008333, 0.015000, 0.005417, 0.016250, 0.031667, 0.019167
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default3]
#*# version = 1
#*# points =
#*# 	0.054583, 0.044583, 0.056667, 0.021667, 0.035000, 0.023750, 0.026250
#*# 	0.024167, 0.020000, 0.012083, -0.017500, -0.013333, -0.010000, 0.028333
#*# 	0.033333, 0.012917, 0.010000, -0.016250, -0.016667, 0.001250, 0.035417
#*# 	0.024583, 0.022083, 0.025833, 0.000000, -0.012500, 0.018333, 0.029167
#*# 	0.012083, 0.042500, 0.008333, -0.001667, -0.037083, -0.014167, 0.015417
#*# 	0.003750, 0.006667, 0.005000, 0.014167, -0.005417, 0.014167, 0.043333
#*# 	0.053333, 0.050000, 0.040833, 0.048333, 0.036667, 0.052500, 0.087500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [input_shaper]
#*#
#*# [probe]
#*# z_offset = -0.700
#*#
#*# [bed_mesh default4]
#*# version = 1
#*# points =
#*# 	0.153750, 0.122500, 0.126250, 0.118750, 0.070000, 0.106250, 0.127500
#*# 	0.066250, 0.072500, 0.048750, 0.053750, 0.068750, 0.091250, 0.141250
#*# 	0.067500, 0.048750, 0.042500, 0.060000, 0.030000, 0.053750, 0.136250
#*# 	0.016250, 0.001250, 0.040000, 0.000000, 0.011250, 0.056250, 0.098750
#*# 	0.002500, 0.005000, -0.007500, 0.015000, 0.000000, 0.020000, 0.075000
#*# 	0.043750, -0.035000, 0.016250, 0.022500, 0.001250, 0.030000, 0.083750
#*# 	0.081250, 0.036250, -0.015000, -0.003750, 0.007500, 0.022500, 0.071250
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 310.0
#*# min_y = 40.0
#*# max_y = 310.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.630460, 0.633257, 0.634651, 0.637756, 0.639564, 0.639663, 0.641112, 0.644406, 0.645674, 0.649544, 0.652661, 0.653169, 0.654915, 0.657618, 0.656699, 0.657316, 0.655212, 0.657307, 0.656294, 0.653053, 0.653475, 0.651127, 0.649159, 0.649646, 0.645188, 0.641177, 0.638643, 0.637534, 0.635931, 0.632851, 0.633360, 0.632695, 0.632522, 0.632382, 0.634255, 0.634053, 0.632600, 0.634094, 0.630859, 0.632502, 0.629481, 0.629029
#*# 	  0.628606, 0.630207, 0.633301, 0.632748, 0.633100, 0.635044, 0.638090, 0.638889, 0.641138, 0.645559, 0.649536, 0.647424, 0.653167, 0.650743, 0.654159, 0.653700, 0.653784, 0.653479, 0.654247, 0.653280, 0.651560, 0.650564, 0.648436, 0.646755, 0.644733, 0.642388, 0.638562, 0.637797, 0.633134, 0.633456, 0.633122, 0.631393, 0.634254, 0.633100, 0.633349, 0.632605, 0.631617, 0.631144, 0.628430, 0.626798, 0.625154, 0.627831
#*# 	  0.626974, 0.631439, 0.632253, 0.634141, 0.634604, 0.635579, 0.639849, 0.641238, 0.647944, 0.646567, 0.648747, 0.651447, 0.651144, 0.648824, 0.652634, 0.648819, 0.650410, 0.648619, 0.653610, 0.652605, 0.651735, 0.650162, 0.647677, 0.647739, 0.646735, 0.645073, 0.639217, 0.638311, 0.633492, 0.633734, 0.631863, 0.634962, 0.632941, 0.636087, 0.633287, 0.634453, 0.631530, 0.629923, 0.628923, 0.626192, 0.629392, 0.626531
#*# 	  0.627239, 0.628642, 0.631579, 0.630756, 0.631911, 0.634587, 0.638122, 0.637073, 0.643402, 0.643908, 0.649849, 0.648667, 0.652639, 0.653694, 0.652619, 0.654129, 0.653552, 0.652183, 0.653536, 0.651615, 0.650877, 0.647647, 0.646797, 0.645827, 0.644413, 0.642640, 0.637029, 0.636668, 0.632438, 0.632780, 0.630635, 0.632397, 0.632707, 0.632999, 0.634940, 0.631618, 0.632049, 0.627244, 0.627436, 0.625414, 0.625507, 0.625219
#*# 	  0.626805, 0.626595, 0.626199, 0.627829, 0.627543, 0.632208, 0.630508, 0.637654, 0.640067, 0.647033, 0.645881, 0.651340, 0.650058, 0.652894, 0.653981, 0.654829, 0.653410, 0.652205, 0.653913, 0.650559, 0.651517, 0.646795, 0.646097, 0.644444, 0.644388, 0.642240, 0.638300, 0.637675, 0.633208, 0.633135, 0.632379, 0.632507, 0.636808, 0.635716, 0.636859, 0.634223, 0.632953, 0.630525, 0.627509, 0.624129, 0.625138, 0.626064
#*# 	  0.628269, 0.629224, 0.631661, 0.630307, 0.631751, 0.632646, 0.634872, 0.638805, 0.643298, 0.645214, 0.647425, 0.650447, 0.650526, 0.650966, 0.654308, 0.653154, 0.652286, 0.652502, 0.651456, 0.650431, 0.649501, 0.645002, 0.645711, 0.641302, 0.643681, 0.638970, 0.639334, 0.634973, 0.632202, 0.635326, 0.631341, 0.635460, 0.633530, 0.633946, 0.633946, 0.632651, 0.629466, 0.629051, 0.626089, 0.624573, 0.625857, 0.624826
#*# 	  0.630693, 0.633791, 0.634462, 0.635017, 0.635292, 0.638021, 0.640564, 0.641794, 0.646487, 0.645906, 0.649703, 0.652625, 0.656866, 0.656571, 0.658712, 0.659191, 0.658254, 0.654947, 0.656302, 0.651846, 0.651914, 0.648847, 0.651554, 0.648100, 0.648640, 0.644892, 0.640873, 0.639702, 0.636773, 0.633550, 0.630161, 0.634340, 0.632067, 0.634298, 0.633980, 0.632807, 0.631604, 0.632686, 0.628370, 0.629234, 0.625969, 0.629852
#*# 	  0.634114, 0.637044, 0.635301, 0.637343, 0.635615, 0.640573, 0.640275, 0.643143, 0.647149, 0.648498, 0.651296, 0.651575, 0.655548, 0.658831, 0.658572, 0.660038, 0.656986, 0.657573, 0.656629, 0.656525, 0.653375, 0.648768, 0.647821, 0.645219, 0.645547, 0.640957, 0.638029, 0.635510, 0.632384, 0.631973, 0.634214, 0.635539, 0.635229, 0.637067, 0.633649, 0.635242, 0.634805, 0.632486, 0.631988, 0.631098, 0.632060, 0.630586
#*# 	  0.633080, 0.634710, 0.635676, 0.635974, 0.637483, 0.637423, 0.642949, 0.641842, 0.644878, 0.647063, 0.647746, 0.651653, 0.653274, 0.655387, 0.659685, 0.656911, 0.655529, 0.655114, 0.653748, 0.653611, 0.649481, 0.647891, 0.642884, 0.644701, 0.640251, 0.638214, 0.631100, 0.631705, 0.631220, 0.630169, 0.630448, 0.632551, 0.631721, 0.633550, 0.632036, 0.634043, 0.630044, 0.629583, 0.628756, 0.626766, 0.631615, 0.628893
#*# 	  0.635616, 0.634225, 0.638707, 0.636413, 0.636339, 0.638725, 0.641941, 0.641665, 0.645241, 0.648347, 0.649404, 0.651064, 0.652528, 0.655055, 0.653168, 0.655349, 0.650433, 0.649964, 0.649539, 0.649311, 0.646145, 0.646853, 0.644931, 0.642936, 0.640577, 0.635739, 0.635704, 0.628679, 0.631410, 0.628048, 0.629205, 0.630727, 0.630614, 0.631730, 0.631373, 0.631162, 0.628637, 0.629227, 0.627520, 0.626555, 0.627699, 0.627713
#*# 	  0.633894, 0.637971, 0.636654, 0.639591, 0.639249, 0.641969, 0.644020, 0.644922, 0.646955, 0.651035, 0.650286, 0.651343, 0.653515, 0.651096, 0.654065, 0.650066, 0.649805, 0.648009, 0.649779, 0.647781, 0.647570, 0.643934, 0.643883, 0.644552, 0.640999, 0.636358, 0.635019, 0.630782, 0.630107, 0.627020, 0.628443, 0.628875, 0.630819, 0.630253, 0.630385, 0.630986, 0.628747, 0.628164, 0.626958, 0.627796, 0.627139, 0.627896
#*# 	  0.635035, 0.635332, 0.638533, 0.638905, 0.640420, 0.641741, 0.642641, 0.643688, 0.648425, 0.649279, 0.650727, 0.651870, 0.652656, 0.653305, 0.653697, 0.650142, 0.649739, 0.645302, 0.645278, 0.645208, 0.642883, 0.640441, 0.641114, 0.639270, 0.638035, 0.634702, 0.631187, 0.630397, 0.625879, 0.629814, 0.626652, 0.629072, 0.628529, 0.629205, 0.630218, 0.627644, 0.628847, 0.626105, 0.626294, 0.625589, 0.624948, 0.626817
#*# 	  0.633750, 0.636766, 0.637104, 0.640463, 0.639172, 0.642954, 0.641168, 0.646854, 0.650416, 0.652062, 0.650817, 0.651556, 0.654043, 0.652658, 0.652994, 0.649785, 0.648624, 0.645340, 0.645345, 0.643925, 0.643014, 0.639291, 0.639129, 0.639666, 0.639912, 0.636296, 0.636376, 0.629907, 0.627678, 0.627791, 0.625746, 0.628632, 0.628052, 0.629505, 0.628154, 0.631123, 0.625571, 0.627482, 0.623521, 0.625932, 0.624783, 0.624311
#*# 	  0.635297, 0.637426, 0.639846, 0.639390, 0.643164, 0.643255, 0.645273, 0.647294, 0.651880, 0.652513, 0.653972, 0.653673, 0.654211, 0.654179, 0.653624, 0.650325, 0.649867, 0.646698, 0.647997, 0.649596, 0.645097, 0.644541, 0.643186, 0.641565, 0.643014, 0.638792, 0.634515, 0.630083, 0.628820, 0.626509, 0.627147, 0.626204, 0.625680, 0.628853, 0.631297, 0.628955, 0.626793, 0.627101, 0.624871, 0.624797, 0.624851, 0.623923
#*# 	  0.635533, 0.634441, 0.638063, 0.639300, 0.640091, 0.643236, 0.640722, 0.647958, 0.649888, 0.650908, 0.651562, 0.651837, 0.653603, 0.652733, 0.652445, 0.651699, 0.647493, 0.646269, 0.645120, 0.643089, 0.642670, 0.640025, 0.638726, 0.638778, 0.638182, 0.633510, 0.635225, 0.627439, 0.631014, 0.629386, 0.629899, 0.631400, 0.629766, 0.629909, 0.629907, 0.630204, 0.626161, 0.624766, 0.623856, 0.621995, 0.622921, 0.624906
#*# 	  0.632309, 0.633604, 0.633810, 0.634555, 0.639074, 0.639524, 0.640592, 0.646459, 0.645338, 0.648441, 0.649892, 0.649890, 0.650931, 0.650437, 0.650398, 0.647038, 0.645906, 0.642768, 0.640813, 0.641454, 0.638798, 0.638187, 0.636781, 0.635691, 0.636945, 0.633640, 0.632686, 0.632396, 0.624195, 0.630303, 0.624651, 0.628471, 0.627874, 0.630037, 0.628260, 0.621965, 0.621356, 0.618963, 0.618335, 0.618757, 0.619729, 0.619506
#*# 	  0.631535, 0.631350, 0.633062, 0.636688, 0.634619, 0.638985, 0.641753, 0.642378, 0.645039, 0.647005, 0.647162, 0.646824, 0.648417, 0.647095, 0.646811, 0.645810, 0.641794, 0.641567, 0.638185, 0.639085, 0.636425, 0.633997, 0.635626, 0.630411, 0.634221, 0.627670, 0.629261, 0.626407, 0.622038, 0.623285, 0.622127, 0.623314, 0.623851, 0.621602, 0.622071, 0.622114, 0.617658, 0.618089, 0.615449, 0.614977, 0.615545, 0.615281
#*# 	  0.629678, 0.631513, 0.632779, 0.634074, 0.636333, 0.636948, 0.639571, 0.640679, 0.643433, 0.644071, 0.644306, 0.643330, 0.645535, 0.643145, 0.644476, 0.639957, 0.638129, 0.638922, 0.635548, 0.636031, 0.635279, 0.632397, 0.630881, 0.630960, 0.627079, 0.626569, 0.624119, 0.622888, 0.617765, 0.621370, 0.618207, 0.622712, 0.619664, 0.621228, 0.621268, 0.619616, 0.616683, 0.615011, 0.612953, 0.612030, 0.612670, 0.612964
#*# 	  0.631337, 0.635507, 0.636098, 0.637168, 0.637514, 0.641311, 0.642448, 0.644671, 0.643808, 0.645804, 0.646254, 0.645410, 0.643104, 0.643026, 0.640866, 0.638850, 0.635469, 0.636056, 0.633183, 0.634992, 0.631864, 0.631505, 0.631290, 0.628327, 0.627047, 0.623809, 0.622169, 0.619686, 0.617723, 0.616839, 0.616739, 0.618978, 0.619982, 0.620087, 0.619054, 0.617208, 0.615682, 0.613690, 0.612258, 0.611451, 0.611606, 0.610993
#*# 	  0.630162, 0.630692, 0.633475, 0.633859, 0.637129, 0.637783, 0.637211, 0.638534, 0.639850, 0.639913, 0.640386, 0.639060, 0.639071, 0.639545, 0.638586, 0.636869, 0.636539, 0.634547, 0.631960, 0.633330, 0.631219, 0.628580, 0.627510, 0.624731, 0.622264, 0.618637, 0.615057, 0.614557, 0.610152, 0.611655, 0.611292, 0.615425, 0.614326, 0.616397, 0.613487, 0.612365, 0.613100, 0.610074, 0.610288, 0.608883, 0.607805, 0.611167
#*# 	  0.629344, 0.631980, 0.635999, 0.634436, 0.635675, 0.634053, 0.632002, 0.635009, 0.634257, 0.635077, 0.633719, 0.635380, 0.635605, 0.637601, 0.637261, 0.636569, 0.636085, 0.633226, 0.632036, 0.632854, 0.629069, 0.628570, 0.625140, 0.623491, 0.618681, 0.617428, 0.613479, 0.609495, 0.608539, 0.607745, 0.608301, 0.611906, 0.610723, 0.611695, 0.612639, 0.613245, 0.609592, 0.611752, 0.607400, 0.606188, 0.608388, 0.604923
#*# 	  0.629478, 0.630629, 0.633493, 0.633585, 0.636117, 0.636187, 0.635790, 0.634866, 0.637092, 0.635928, 0.635932, 0.634846, 0.636841, 0.637203, 0.636670, 0.636807, 0.633942, 0.635286, 0.630751, 0.631870, 0.630899, 0.626851, 0.626359, 0.620893, 0.618209, 0.615678, 0.610023, 0.608888, 0.603833, 0.607737, 0.605737, 0.607919, 0.610228, 0.607755, 0.610804, 0.606768, 0.607747, 0.604216, 0.604893, 0.604030, 0.601138, 0.602144
#*# 	  0.629201, 0.631393, 0.632881, 0.634669, 0.637491, 0.635891, 0.635557, 0.637935, 0.635669, 0.636474, 0.636094, 0.635880, 0.636832, 0.637524, 0.637304, 0.637899, 0.637253, 0.635870, 0.636381, 0.634011, 0.632007, 0.627271, 0.624455, 0.623227, 0.618631, 0.615883, 0.614296, 0.609997, 0.610728, 0.610584, 0.608855, 0.610245, 0.610026, 0.610292, 0.610098, 0.608494, 0.604384, 0.601194, 0.601106, 0.603005, 0.598637, 0.601892
#*# 	  0.631783, 0.632448, 0.636948, 0.635687, 0.636877, 0.636660, 0.636497, 0.636815, 0.638284, 0.637325, 0.637686, 0.636655, 0.638197, 0.638754, 0.638206, 0.636563, 0.636179, 0.636128, 0.634812, 0.633454, 0.631666, 0.629346, 0.625062, 0.623705, 0.619552, 0.616672, 0.614491, 0.609187, 0.610007, 0.607091, 0.607690, 0.610664, 0.610089, 0.609068, 0.614287, 0.608858, 0.608024, 0.607294, 0.605625, 0.607659, 0.603542, 0.603478
#*# 	  0.628051, 0.630132, 0.633122, 0.634958, 0.634047, 0.635622, 0.632801, 0.634695, 0.635201, 0.634529, 0.634569, 0.634244, 0.635972, 0.634879, 0.634204, 0.634410, 0.633964, 0.634261, 0.635777, 0.631571, 0.630158, 0.628434, 0.625706, 0.620816, 0.617527, 0.614620, 0.611925, 0.604098, 0.604340, 0.604014, 0.604883, 0.605627, 0.606739, 0.609590, 0.607921, 0.608491, 0.604807, 0.605127, 0.602585, 0.603075, 0.601450, 0.601141
#*# 	  0.627239, 0.629983, 0.630404, 0.631856, 0.632583, 0.632308, 0.632652, 0.632109, 0.634168, 0.634300, 0.633981, 0.634165, 0.633794, 0.634088, 0.634385, 0.629667, 0.631570, 0.628932, 0.628331, 0.629837, 0.624788, 0.626766, 0.622345, 0.620329, 0.619608, 0.615691, 0.613927, 0.607840, 0.606736, 0.608370, 0.604982, 0.609035, 0.608935, 0.608636, 0.608894, 0.607116, 0.606778, 0.605594, 0.603358, 0.602790, 0.601245, 0.600849
#*# 	  0.625232, 0.625839, 0.628819, 0.630623, 0.630879, 0.630851, 0.630878, 0.630087, 0.630937, 0.632536, 0.631260, 0.631441, 0.630932, 0.630653, 0.629647, 0.630332, 0.628665, 0.626437, 0.626252, 0.624290, 0.626810, 0.620781, 0.619554, 0.618541, 0.616865, 0.613916, 0.612345, 0.607808, 0.607262, 0.604833, 0.604748, 0.607585, 0.605364, 0.606902, 0.605748, 0.605137, 0.602231, 0.601686, 0.600039, 0.599338, 0.600773, 0.597879
#*# 	  0.623908, 0.626575, 0.628610, 0.628785, 0.631304, 0.629743, 0.629854, 0.630363, 0.631358, 0.630314, 0.630734, 0.630166, 0.627989, 0.629259, 0.626713, 0.628459, 0.625101, 0.623250, 0.625080, 0.621832, 0.622418, 0.618405, 0.621088, 0.615867, 0.617941, 0.611511, 0.611500, 0.606533, 0.602793, 0.604474, 0.601783, 0.604032, 0.603682, 0.602896, 0.604142, 0.602711, 0.600515, 0.599467, 0.597792, 0.598258, 0.595284, 0.595560
#*# 	  0.620076, 0.621070, 0.622329, 0.623516, 0.625662, 0.625702, 0.625556, 0.626649, 0.626482, 0.627402, 0.626476, 0.626404, 0.626178, 0.624294, 0.625572, 0.624790, 0.621413, 0.621224, 0.618323, 0.618144, 0.615549, 0.614227, 0.612723, 0.611344, 0.608736, 0.607534, 0.604343, 0.598972, 0.598947, 0.598523, 0.595336, 0.597392, 0.596713, 0.595522, 0.597232, 0.595784, 0.597098, 0.594177, 0.592086, 0.590223, 0.592916, 0.590097
#*# 	  0.615278, 0.617015, 0.618534, 0.619336, 0.620877, 0.622039, 0.622788, 0.622993, 0.624197, 0.626077, 0.625168, 0.628312, 0.624487, 0.624369, 0.625169, 0.622535, 0.621087, 0.616222, 0.613945, 0.611790, 0.612646, 0.605943, 0.608454, 0.604762, 0.602576, 0.600475, 0.599696, 0.594930, 0.593336, 0.591398, 0.589613, 0.593834, 0.591093, 0.592832, 0.592478, 0.591578, 0.593319, 0.589411, 0.586773, 0.588628, 0.586202, 0.586201
#*# 	  0.614059, 0.616775, 0.615656, 0.617882, 0.619876, 0.619751, 0.621201, 0.621939, 0.621926, 0.623820, 0.622111, 0.621945, 0.621789, 0.622480, 0.620902, 0.618122, 0.618539, 0.614705, 0.614261, 0.613173, 0.608930, 0.610065, 0.605992, 0.604285, 0.602771, 0.598750, 0.598324, 0.592758, 0.590784, 0.590624, 0.589988, 0.590412, 0.591765, 0.591266, 0.590065, 0.593134, 0.589822, 0.589677, 0.586437, 0.586529, 0.584385, 0.584982
#*# 	  0.619376, 0.620722, 0.621874, 0.620218, 0.623012, 0.622083, 0.623357, 0.625189, 0.624472, 0.626524, 0.626532, 0.625571, 0.625406, 0.623864, 0.622848, 0.621963, 0.620031, 0.617781, 0.616384, 0.617883, 0.617227, 0.613599, 0.614449, 0.611396, 0.609489, 0.605989, 0.598027, 0.593951, 0.587759, 0.588276, 0.586442, 0.589591, 0.593363, 0.592244, 0.590244, 0.592133, 0.590986, 0.592196, 0.587543, 0.589180, 0.585033, 0.585674
#*# 	  0.622177, 0.624403, 0.623223, 0.627800, 0.627300, 0.627388, 0.628471, 0.628166, 0.630268, 0.629379, 0.628286, 0.629556, 0.627452, 0.626586, 0.626716, 0.622185, 0.623610, 0.619587, 0.620853, 0.619983, 0.617557, 0.617377, 0.611303, 0.613383, 0.607218, 0.604348, 0.601330, 0.593824, 0.594449, 0.594009, 0.593859, 0.596752, 0.598594, 0.599803, 0.598270, 0.595947, 0.594553, 0.594421, 0.591579, 0.592801, 0.590510, 0.588957
#*# 	  0.629134, 0.625327, 0.626388, 0.628288, 0.628002, 0.628261, 0.631935, 0.631731, 0.633013, 0.632959, 0.631670, 0.631434, 0.630849, 0.629585, 0.626916, 0.625572, 0.625152, 0.623758, 0.624207, 0.623620, 0.624307, 0.620695, 0.619094, 0.615973, 0.613890, 0.606999, 0.604226, 0.601456, 0.597581, 0.599238, 0.602808, 0.599213, 0.600083, 0.602825, 0.604029, 0.598535, 0.596896, 0.596998, 0.591611, 0.593238, 0.589613, 0.591697
#*# 	  0.630217, 0.631413, 0.632127, 0.632627, 0.633331, 0.633440, 0.633680, 0.633554, 0.634245, 0.633060, 0.633791, 0.633889, 0.630616, 0.632236, 0.629406, 0.625846, 0.625133, 0.624766, 0.625879, 0.624620, 0.626836, 0.622250, 0.621730, 0.618024, 0.614268, 0.612158, 0.608586, 0.603187, 0.601980, 0.602581, 0.599294, 0.603019, 0.600650, 0.601975, 0.600857, 0.600439, 0.599064, 0.597218, 0.593601, 0.597374, 0.593404, 0.592970
#*# 	  0.632284, 0.635264, 0.635887, 0.635197, 0.635626, 0.637292, 0.635934, 0.632876, 0.633532, 0.633731, 0.634607, 0.633716, 0.629104, 0.630170, 0.627557, 0.629525, 0.628011, 0.627030, 0.626481, 0.626325, 0.628588, 0.623572, 0.622424, 0.619582, 0.616476, 0.612910, 0.609831, 0.604125, 0.604166, 0.603066, 0.601201, 0.601367, 0.602650, 0.601942, 0.602516, 0.600311, 0.599947, 0.599639, 0.597008, 0.595490, 0.599667, 0.594077
#*# 	  0.631637, 0.631440, 0.633453, 0.631869, 0.633496, 0.633917, 0.632894, 0.633811, 0.634004, 0.633185, 0.632964, 0.633945, 0.632316, 0.630385, 0.631448, 0.627750, 0.625352, 0.626065, 0.624123, 0.626993, 0.623333, 0.621439, 0.617987, 0.616957, 0.614170, 0.611526, 0.605662, 0.604954, 0.599822, 0.601715, 0.599845, 0.600049, 0.599983, 0.597496, 0.597855, 0.597159, 0.597401, 0.596561, 0.595441, 0.594881, 0.594508, 0.596817
#*# 	  0.631678, 0.631147, 0.631380, 0.631029, 0.632763, 0.631986, 0.635516, 0.637055, 0.634260, 0.636151, 0.636467, 0.635463, 0.633907, 0.629188, 0.627136, 0.622472, 0.621649, 0.620276, 0.619065, 0.617138, 0.619544, 0.615783, 0.616450, 0.613386, 0.611986, 0.607496, 0.605101, 0.601759, 0.599763, 0.598234, 0.597924, 0.598777, 0.597535, 0.597499, 0.598370, 0.594703, 0.596162, 0.594661, 0.595063, 0.593637, 0.593050, 0.590289
#*# 	  0.627172, 0.626855, 0.627767, 0.626718, 0.626791, 0.629031, 0.627874, 0.628439, 0.630456, 0.628117, 0.630699, 0.626664, 0.625152, 0.625562, 0.622339, 0.620921, 0.620308, 0.616538, 0.618962, 0.614090, 0.616621, 0.609917, 0.611900, 0.606643, 0.603679, 0.601479, 0.596595, 0.594827, 0.591744, 0.592510, 0.590139, 0.591103, 0.590411, 0.589833, 0.590905, 0.589320, 0.589238, 0.588612, 0.588613, 0.585407, 0.585913, 0.586292
#*# 	  0.629005, 0.628058, 0.626357, 0.625987, 0.626639, 0.625021, 0.627506, 0.627604, 0.626641, 0.629276, 0.627536, 0.626779, 0.624767, 0.624786, 0.623775, 0.620542, 0.619508, 0.619845, 0.616839, 0.618587, 0.614588, 0.609942, 0.608414, 0.603735, 0.599983, 0.596472, 0.595641, 0.588110, 0.588963, 0.585141, 0.584841, 0.588900, 0.588979, 0.588893, 0.586724, 0.588652, 0.584742, 0.586364, 0.583776, 0.583589, 0.582714, 0.581809
#*# 	  0.627938, 0.626321, 0.626337, 0.624717, 0.624606, 0.625835, 0.626753, 0.623793, 0.627121, 0.624907, 0.624619, 0.623261, 0.624676, 0.619463, 0.619387, 0.617588, 0.617140, 0.616080, 0.614090, 0.611893, 0.612637, 0.605364, 0.605393, 0.602038, 0.599627, 0.596475, 0.593940, 0.589013, 0.587438, 0.588366, 0.585306, 0.585494, 0.584395, 0.584178, 0.584044, 0.584267, 0.583015, 0.583783, 0.578595, 0.581749, 0.579401, 0.581613
#*# x_count = 42
#*# y_count = 41
#*# mesh_x_pps = 1
#*# mesh_y_pps = 1
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 52.81
#*# max_x = 248.1
#*# min_y = 89.66
#*# max_y = 281.74
#*#
#*# [cartographer model default]
#*# model_coef = 1.294850672339776,
#*# 	  1.7272308602913684,
#*# 	  0.7586544342091592,
#*# 	  0.26442481763510167,
#*# 	  0.44021857818608107,
#*# 	  0.8108934440440325,
#*# 	  -0.2820536756068903,
#*# 	  -0.8319183831561195,
#*# 	  0.3381200555737823,
#*# 	  0.48157346861520534
#*# model_domain = 3.0764368530980986e-07,3.2801412686329605e-07
#*# model_range = 0.100000,5.000000
#*# model_temp = 53.525887
#*# model_offset = 0.00000
